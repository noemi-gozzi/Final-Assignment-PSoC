ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"InterruptRoutines.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Custom_Pin_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	Custom_Pin_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	Custom_Pin_ISR, %function
  25              	Custom_Pin_ISR:
  26              	.LFB64:
  27              		.file 1 "InterruptRoutines.c"
   1:InterruptRoutines.c **** /* ========================================
   2:InterruptRoutines.c ****  *
   3:InterruptRoutines.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:InterruptRoutines.c ****  * All Rights Reserved
   5:InterruptRoutines.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:InterruptRoutines.c ****  *
   7:InterruptRoutines.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:InterruptRoutines.c ****  * WHICH IS THE PROPERTY OF your company.
   9:InterruptRoutines.c ****  *
  10:InterruptRoutines.c ****  * ========================================
  11:InterruptRoutines.c **** */
  12:InterruptRoutines.c **** #include "InterruptRoutines.h"
  13:InterruptRoutines.c **** #include "RGBLedDriver.h"
  14:InterruptRoutines.c **** #define DATA_BYTES 6
  15:InterruptRoutines.c **** 
  16:InterruptRoutines.c **** #define empty_bit 0x20
  17:InterruptRoutines.c **** 
  18:InterruptRoutines.c **** char bufferUART[100];
  19:InterruptRoutines.c **** #define UART_1_PutBuffer UART_1_PutString(bufferUART)
  20:InterruptRoutines.c **** #include <stdio.h>
  21:InterruptRoutines.c **** #include <string.h>
  22:InterruptRoutines.c **** 
  23:InterruptRoutines.c **** #define OFF 0
  24:InterruptRoutines.c **** #define ON 1
  25:InterruptRoutines.c **** #define TIME_FACTOR 6
  26:InterruptRoutines.c **** #define FULL_SCALE_RANGE_LOW 0
  27:InterruptRoutines.c **** #define FULL_SCALE_RANGE_HIGH 65535
  28:InterruptRoutines.c **** #define FULL_SCALE_RANGE_HALF 32767 
  29:InterruptRoutines.c **** #define DATA_REGISTER_ADDRESS 0x0000
  30:InterruptRoutines.c **** 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 2


  31:InterruptRoutines.c **** uint8_t system_status=OFF;
  32:InterruptRoutines.c **** uint8_t configuration_status=OFF;
  33:InterruptRoutines.c **** uint8 TimerFlag=0; 
  34:InterruptRoutines.c **** int32 value_POT;
  35:InterruptRoutines.c **** uint8 data_register;
  36:InterruptRoutines.c **** 
  37:InterruptRoutines.c **** uint8_t i=0;
  38:InterruptRoutines.c **** 
  39:InterruptRoutines.c **** uint8 UARTVerboseFlag = 0;
  40:InterruptRoutines.c **** 
  41:InterruptRoutines.c **** CY_ISR(Custom_Pin_ISR){
  28              		.loc 1 41 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  42:InterruptRoutines.c ****     
  43:InterruptRoutines.c ****     
  44:InterruptRoutines.c **** 
  45:InterruptRoutines.c ****     
  46:InterruptRoutines.c ****     PacketReadyFlag=1;
  36              		.loc 1 46 0
  37 0002 0122     		movs	r2, #1
  38 0004 024B     		ldr	r3, .L3
  39 0006 1A70     		strb	r2, [r3]
  47:InterruptRoutines.c **** //    uint8_t data = LIS3DH_readByte(LIS3DH_INT1_SRC);
  48:InterruptRoutines.c **** //    sprintf(bufferUART, "INT1_SRC 0x%02X\r\n", data);
  49:InterruptRoutines.c **** //        UART_1_PutBuffer;
  50:InterruptRoutines.c **** //    data = LIS3DH_readByte(LIS3DH_FIFO_SRC_REG);
  51:InterruptRoutines.c **** //    sprintf(bufferUART, "FIFO_SRC 0x%02X\r\n", data);
  52:InterruptRoutines.c **** //        UART_1_PutBuffer;
  53:InterruptRoutines.c **** //    
  54:InterruptRoutines.c **** //    LIS3DH_writeByte(LIS3DH_FIFO_CTRL_REG,0x00);
  55:InterruptRoutines.c **** //    LIS3DH_writeByte(LIS3DH_FIFO_CTRL_REG,0x47);
  56:InterruptRoutines.c ****     
  57:InterruptRoutines.c **** //        if (data_read&0x1E){
  58:InterruptRoutines.c **** //            PacketReadyFlag=1;  
  59:InterruptRoutines.c **** //        }
  60:InterruptRoutines.c **** //        else{
  61:InterruptRoutines.c **** //            PacketReadyFlag=2;
  62:InterruptRoutines.c **** //        }
  63:InterruptRoutines.c ****         
  64:InterruptRoutines.c **** //        else{
  65:InterruptRoutines.c **** //            PacketReadyFlag = 2;
  66:InterruptRoutines.c **** //        }
  67:InterruptRoutines.c ****   
  68:InterruptRoutines.c ****     //uint8_t clear=LIS3DH_readByte(LIS3DH_INT1_SRC); //clear interrupt register
  69:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  70:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  71:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  72:InterruptRoutines.c **** //    
  73:InterruptRoutines.c ****     Pin_ISR_ClearInterrupt();
  40              		.loc 1 73 0
  41 0008 FFF7FEFF 		bl	Pin_ISR_ClearInterrupt
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 3


  42              	.LVL0:
  43 000c 08BD     		pop	{r3, pc}
  44              	.L4:
  45 000e 00BF     		.align	2
  46              	.L3:
  47 0010 00000000 		.word	PacketReadyFlag
  48              		.cfi_endproc
  49              	.LFE64:
  50              		.size	Custom_Pin_ISR, .-Custom_Pin_ISR
  51              		.section	.text.Custom_Pin_Button,"ax",%progbits
  52              		.align	2
  53              		.global	Custom_Pin_Button
  54              		.thumb
  55              		.thumb_func
  56              		.type	Custom_Pin_Button, %function
  57              	Custom_Pin_Button:
  58              	.LFB65:
  74:InterruptRoutines.c ****     
  75:InterruptRoutines.c ****     //uint8_t value=LIS3DH_readByte(LIS3DH_FIFO_SRC_REG);
  76:InterruptRoutines.c **** //    while (!(value&empty_bit)){
  77:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  78:InterruptRoutines.c **** //}
  79:InterruptRoutines.c ****     
  80:InterruptRoutines.c **** }
  81:InterruptRoutines.c **** 
  82:InterruptRoutines.c **** CY_ISR(Custom_Pin_Button){
  59              		.loc 1 82 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63 0000 08B5     		push	{r3, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 3, -8
  66              		.cfi_offset 14, -4
  83:InterruptRoutines.c ****     
  84:InterruptRoutines.c ****     /*      NEGATIVE EDGE OF THE DEBOUNCED BUTTON -->CLICKED
  85:InterruptRoutines.c ****     STOP timer button. this timer is responsible of counting the time difference between two differ
  86:InterruptRoutines.c ****     I don't want that timer keeps counting if i'm pressing (i don't consided that as time INTER cli
  87:InterruptRoutines.c ****     */
  88:InterruptRoutines.c ****     
  89:InterruptRoutines.c ****     TIMER_button_Stop();
  67              		.loc 1 89 0
  68 0002 FFF7FEFF 		bl	TIMER_button_Stop
  69              	.LVL1:
  90:InterruptRoutines.c ****     Timer_Blinking_Start();
  70              		.loc 1 90 0
  71 0006 FFF7FEFF 		bl	Timer_Blinking_Start
  72              	.LVL2:
  91:InterruptRoutines.c ****     /*
  92:InterruptRoutines.c ****     index i is increased with a timer (overflow 250 ms) that is used for counting the time between
  93:InterruptRoutines.c ****     negative edge and positive edge --> duration of pressing. everytime a negative edge is detected
  94:InterruptRoutines.c ****     */
  95:InterruptRoutines.c ****     i=0;
  73              		.loc 1 95 0
  74 000a 0022     		movs	r2, #0
  75 000c 014B     		ldr	r3, .L7
  76 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 4


  77 0010 08BD     		pop	{r3, pc}
  78              	.L8:
  79 0012 00BF     		.align	2
  80              	.L7:
  81 0014 00000000 		.word	.LANCHOR0
  82              		.cfi_endproc
  83              	.LFE65:
  84              		.size	Custom_Pin_Button, .-Custom_Pin_Button
  85              		.section	.text.Custom_Pin_Button_Positive,"ax",%progbits
  86              		.align	2
  87              		.global	Custom_Pin_Button_Positive
  88              		.thumb
  89              		.thumb_func
  90              		.type	Custom_Pin_Button_Positive, %function
  91              	Custom_Pin_Button_Positive:
  92              	.LFB66:
  96:InterruptRoutines.c ****  
  97:InterruptRoutines.c **** }
  98:InterruptRoutines.c **** 
  99:InterruptRoutines.c **** CY_ISR(Custom_Pin_Button_Positive){
  93              		.loc 1 99 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 38B5     		push	{r3, r4, r5, lr}
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 3, -16
 100              		.cfi_offset 4, -12
 101              		.cfi_offset 5, -8
 102              		.cfi_offset 14, -4
 100:InterruptRoutines.c ****     
 101:InterruptRoutines.c ****     /*      POSITIVE EDGE OF THE DEBOUNCED BUTTON --> BUTTON RELEASED
 102:InterruptRoutines.c ****     when the button is released the first thing to be checked is the time intercurred 
 103:InterruptRoutines.c ****     between button pressed and button released.
 104:InterruptRoutines.c ****     since overflow is 250 ms, index=TIME FACTOR=6 means 1500 ms
 105:InterruptRoutines.c ****     if the time was higher than time factor : CONFIGURATION MODE
 106:InterruptRoutines.c ****     if the time was lower that time factor: check for double click options (START/STOP ACQUISITION)
 107:InterruptRoutines.c ****     */
 108:InterruptRoutines.c ****     
 109:InterruptRoutines.c ****     if (i>=TIME_FACTOR){
 103              		.loc 1 109 0
 104 0002 494B     		ldr	r3, .L21
 105 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 106 0006 052B     		cmp	r3, #5
 107 0008 36D9     		bls	.L10
 110:InterruptRoutines.c ****         
 111:InterruptRoutines.c ****         /*LONG PRESSURE: configuration mode. depending on the current configuration state
 112:InterruptRoutines.c ****         enter or exit configuration mode
 113:InterruptRoutines.c ****         */
 114:InterruptRoutines.c ****         if (configuration_status==OFF){
 108              		.loc 1 114 0
 109 000a 474B     		ldr	r3, .L21
 110 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 111 000e 73B9     		cbnz	r3, .L11
 115:InterruptRoutines.c ****             
 116:InterruptRoutines.c ****             configuration_status=ON;
 112              		.loc 1 116 0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 5


 113 0010 0122     		movs	r2, #1
 114 0012 454B     		ldr	r3, .L21
 115 0014 5A70     		strb	r2, [r3, #1]
 117:InterruptRoutines.c ****             
 118:InterruptRoutines.c ****             RGBLed_WriteColor(OFF, OFF, OFF);
 116              		.loc 1 118 0
 117 0016 0022     		movs	r2, #0
 118 0018 1146     		mov	r1, r2
 119 001a 1046     		mov	r0, r2
 120 001c FFF7FEFF 		bl	RGBLed_WriteColor
 121              	.LVL3:
 119:InterruptRoutines.c ****             SPIM_1_Stop();
 122              		.loc 1 119 0
 123 0020 FFF7FEFF 		bl	SPIM_1_Stop
 124              	.LVL4:
 120:InterruptRoutines.c ****             //SPIM_2_Stop();
 121:InterruptRoutines.c ****             UART_1_Stop();
 125              		.loc 1 121 0
 126 0024 FFF7FEFF 		bl	UART_1_Stop
 127              	.LVL5:
 122:InterruptRoutines.c ****             Timer_Blinking_Start();
 128              		.loc 1 122 0
 129 0028 FFF7FEFF 		bl	Timer_Blinking_Start
 130              	.LVL6:
 131 002c 20E0     		b	.L12
 132              	.L11:
 123:InterruptRoutines.c ****             
 124:InterruptRoutines.c ****         }
 125:InterruptRoutines.c ****         else if (configuration_status==ON){
 133              		.loc 1 125 0
 134 002e 012B     		cmp	r3, #1
 135 0030 1ED1     		bne	.L12
 126:InterruptRoutines.c **** 
 127:InterruptRoutines.c ****             configuration_status=OFF;
 136              		.loc 1 127 0
 137 0032 3D4C     		ldr	r4, .L21
 138 0034 0020     		movs	r0, #0
 139 0036 6070     		strb	r0, [r4, #1]
 128:InterruptRoutines.c ****             
 129:InterruptRoutines.c ****             /*
 130:InterruptRoutines.c ****             if the system is exiting the configuration mode, RETURN to the previous
 131:InterruptRoutines.c ****             system status.
 132:InterruptRoutines.c ****             i.e. I can enter configuration mode both from system ON and system OFF. then, when i de
 133:InterruptRoutines.c ****             close CONFIGURATION mode the system is going back to ON or OFF. 
 134:InterruptRoutines.c ****             */
 135:InterruptRoutines.c ****             data_register = (system_status<<7) | (UARTVerboseFlag);
 140              		.loc 1 135 0
 141 0038 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 142 003a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 143 003c 43EAC111 		orr	r1, r3, r1, lsl #7
 144 0040 C9B2     		uxtb	r1, r1
 145 0042 3A4B     		ldr	r3, .L21+4
 146 0044 1970     		strb	r1, [r3]
 136:InterruptRoutines.c ****             EEPROM_writeByte(0x0000, data_register);
 147              		.loc 1 136 0
 148 0046 FFF7FEFF 		bl	EEPROM_writeByte
 149              	.LVL7:
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 6


 137:InterruptRoutines.c ****             if (system_status==OFF){
 150              		.loc 1 137 0
 151 004a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 152 004c 1BB9     		cbnz	r3, .L13
 138:InterruptRoutines.c ****                 Pin_Led_Blue_Write(OFF);
 153              		.loc 1 138 0
 154 004e 0020     		movs	r0, #0
 155 0050 FFF7FEFF 		bl	Pin_Led_Blue_Write
 156              	.LVL8:
 157 0054 0CE0     		b	.L12
 158              	.L13:
 139:InterruptRoutines.c ****             }
 140:InterruptRoutines.c ****             else if (system_status==ON){
 159              		.loc 1 140 0
 160 0056 012B     		cmp	r3, #1
 161 0058 0AD1     		bne	.L12
 141:InterruptRoutines.c ****                 Pin_Led_Blue_Write(ON);
 162              		.loc 1 141 0
 163 005a 0120     		movs	r0, #1
 164 005c FFF7FEFF 		bl	Pin_Led_Blue_Write
 165              	.LVL9:
 142:InterruptRoutines.c ****                 
 143:InterruptRoutines.c ****                 UART_1_Start();
 166              		.loc 1 143 0
 167 0060 FFF7FEFF 		bl	UART_1_Start
 168              	.LVL10:
 144:InterruptRoutines.c ****                 SPIM_1_Start();
 169              		.loc 1 144 0
 170 0064 FFF7FEFF 		bl	SPIM_1_Start
 171              	.LVL11:
 145:InterruptRoutines.c ****                 //SPIM_2_Start();
 146:InterruptRoutines.c ****                 RGBLed_Start();
 172              		.loc 1 146 0
 173 0068 FFF7FEFF 		bl	RGBLed_Start
 174              	.LVL12:
 147:InterruptRoutines.c ****                 Timer_Blinking_Stop();
 175              		.loc 1 147 0
 176 006c FFF7FEFF 		bl	Timer_Blinking_Stop
 177              	.LVL13:
 178              	.L12:
 148:InterruptRoutines.c ****                 
 149:InterruptRoutines.c ****             }
 150:InterruptRoutines.c ****         }
 151:InterruptRoutines.c ****         /*flag for switch case for double click detection. if i'm in long pressure,
 152:InterruptRoutines.c ****         initialize to 0, to be sure that long pressure is not detected as normal click*/
 153:InterruptRoutines.c ****         TimerFlag=0;
 179              		.loc 1 153 0
 180 0070 0022     		movs	r2, #0
 181 0072 2D4B     		ldr	r3, .L21
 182 0074 1A71     		strb	r2, [r3, #4]
 183 0076 38BD     		pop	{r3, r4, r5, pc}
 184              	.L10:
 154:InterruptRoutines.c ****     }
 155:InterruptRoutines.c ****     
 156:InterruptRoutines.c ****     /*
 157:InterruptRoutines.c ****     the system CANNOT enter the start/stop CONDITIONS if it's in configuration mode.
 158:InterruptRoutines.c ****     so it enters if:
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 7


 159:InterruptRoutines.c ****     - time between push and release of the button is lower than time factor (not long pressure)
 160:InterruptRoutines.c ****        --> CHECK INSIDE IF DOUBLE CLICK
 161:InterruptRoutines.c ****     - the system is not in CONFIGURATION mode
 162:InterruptRoutines.c ****     */
 163:InterruptRoutines.c ****     
 164:InterruptRoutines.c ****     else if (i<TIME_FACTOR && configuration_status==OFF) {
 185              		.loc 1 164 0
 186 0078 052B     		cmp	r3, #5
 187 007a 54D8     		bhi	.L9
 188              		.loc 1 164 0 is_stmt 0 discriminator 1
 189 007c 2A4B     		ldr	r3, .L21
 190 007e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 191 0080 002B     		cmp	r3, #0
 192 0082 50D1     		bne	.L9
 165:InterruptRoutines.c ****         switch (TimerFlag)
 193              		.loc 1 165 0 is_stmt 1
 194 0084 284B     		ldr	r3, .L21
 195 0086 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 196 0088 012B     		cmp	r3, #1
 197 008a 09D0     		beq	.L15
 198 008c 13B1     		cbz	r3, .L16
 199 008e 022B     		cmp	r3, #2
 200 0090 44D0     		beq	.L17
 201 0092 38BD     		pop	{r3, r4, r5, pc}
 202              	.L16:
 166:InterruptRoutines.c ****     	{
 167:InterruptRoutines.c ****     		case 0: 
 168:InterruptRoutines.c ****             //first time that the button has been pressed. normal pressure, SINGLE. Nothing to do.
 169:InterruptRoutines.c ****             TimerFlag=1;
 203              		.loc 1 169 0
 204 0094 0122     		movs	r2, #1
 205 0096 244B     		ldr	r3, .L21
 206 0098 1A71     		strb	r2, [r3, #4]
 170:InterruptRoutines.c ****             /*
 171:InterruptRoutines.c ****             if the button has been released, and it was not a long pressure, that is identified as 
 172:InterruptRoutines.c ****             TIMER button start, that is the one used to measure the time intercurring between two c
 173:InterruptRoutines.c ****             it will be stopped in the NEGATIVE isr of the next debounced pressure
 174:InterruptRoutines.c ****             */
 175:InterruptRoutines.c ****             TIMER_button_Start();
 207              		.loc 1 175 0
 208 009a FFF7FEFF 		bl	TIMER_button_Start
 209              	.LVL14:
 176:InterruptRoutines.c ****     		break;
 210              		.loc 1 176 0
 211 009e 38BD     		pop	{r3, r4, r5, pc}
 212              	.L15:
 177:InterruptRoutines.c ****     		case 1:
 178:InterruptRoutines.c ****             /*button has been pressed for (at least) two times.
 179:InterruptRoutines.c ****             the time between first and second pressure is less than timer overflow, since
 180:InterruptRoutines.c ****             if it overflows (at least one time, that is 500 ms) the TimerFlag would be set as 2.
 181:InterruptRoutines.c ****             */
 182:InterruptRoutines.c ****             
 183:InterruptRoutines.c ****             /* CHECK THE PREVIOUS SYSTEM STATUS */
 184:InterruptRoutines.c ****             
 185:InterruptRoutines.c ****             if (system_status==OFF){
 213              		.loc 1 185 0
 214 00a0 214B     		ldr	r3, .L21
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 8


 215 00a2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 216 00a4 CBB9     		cbnz	r3, .L18
 186:InterruptRoutines.c ****                 /******************* SYSTEM START ACQUISITION ******************/
 187:InterruptRoutines.c ****                           
 188:InterruptRoutines.c ****                 system_status=ON;
 217              		.loc 1 188 0
 218 00a6 204C     		ldr	r4, .L21
 219 00a8 0120     		movs	r0, #1
 220 00aa A070     		strb	r0, [r4, #2]
 189:InterruptRoutines.c ****                 Pin_Led_Blue_Write(ON);
 221              		.loc 1 189 0
 222 00ac FFF7FEFF 		bl	Pin_Led_Blue_Write
 223              	.LVL15:
 190:InterruptRoutines.c ****                  
 191:InterruptRoutines.c ****                 UART_1_Start();
 224              		.loc 1 191 0
 225 00b0 FFF7FEFF 		bl	UART_1_Start
 226              	.LVL16:
 192:InterruptRoutines.c ****                 SPIM_1_Start();
 227              		.loc 1 192 0
 228 00b4 FFF7FEFF 		bl	SPIM_1_Start
 229              	.LVL17:
 193:InterruptRoutines.c ****                 //SPIM_2_Start();
 194:InterruptRoutines.c ****                 RGBLed_Start();
 230              		.loc 1 194 0
 231 00b8 FFF7FEFF 		bl	RGBLed_Start
 232              	.LVL18:
 195:InterruptRoutines.c ****                 Timer_Blinking_Stop();
 233              		.loc 1 195 0
 234 00bc FFF7FEFF 		bl	Timer_Blinking_Stop
 235              	.LVL19:
 196:InterruptRoutines.c **** 
 197:InterruptRoutines.c ****                 /* DATA REGISTER (0x0000 EEPROM): system_status - - - - - - UARTVerboseFlag
 198:InterruptRoutines.c ****                 i.e. if the system is ON (acquisition) and the flag is high 
 199:InterruptRoutines.c ****                 (transmission via UART to the Bridge Control Panel) data 
 200:InterruptRoutines.c ****                 register is: 10000001 (0x81)*/
 201:InterruptRoutines.c ****                 data_register = (system_status<<7) | (UARTVerboseFlag);
 236              		.loc 1 201 0
 237 00c0 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 238 00c2 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 239 00c4 43EAC111 		orr	r1, r3, r1, lsl #7
 240 00c8 C9B2     		uxtb	r1, r1
 241 00ca 184B     		ldr	r3, .L21+4
 242 00cc 1970     		strb	r1, [r3]
 202:InterruptRoutines.c ****                 EEPROM_writeByte(0x0000, data_register);
 243              		.loc 1 202 0
 244 00ce 0020     		movs	r0, #0
 245 00d0 FFF7FEFF 		bl	EEPROM_writeByte
 246              	.LVL20:
 203:InterruptRoutines.c ****                 EEPROM_waitForWriteComplete();
 247              		.loc 1 203 0
 248 00d4 FFF7FEFF 		bl	EEPROM_waitForWriteComplete
 249              	.LVL21:
 250 00d8 1CE0     		b	.L19
 251              	.L18:
 204:InterruptRoutines.c **** 
 205:InterruptRoutines.c ****             }
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 9


 206:InterruptRoutines.c ****             else if (system_status==ON){
 252              		.loc 1 206 0
 253 00da 012B     		cmp	r3, #1
 254 00dc 1AD1     		bne	.L19
 207:InterruptRoutines.c ****                 /******************* SYSTEM STOP ACQUISITION ******************/
 208:InterruptRoutines.c ****                 system_status=OFF;
 255              		.loc 1 208 0
 256 00de 124D     		ldr	r5, .L21
 257 00e0 0024     		movs	r4, #0
 258 00e2 AC70     		strb	r4, [r5, #2]
 209:InterruptRoutines.c ****                 Pin_Led_Blue_Write(OFF);
 259              		.loc 1 209 0
 260 00e4 2046     		mov	r0, r4
 261 00e6 FFF7FEFF 		bl	Pin_Led_Blue_Write
 262              	.LVL22:
 210:InterruptRoutines.c ****                 data_register = (system_status<<7) | (UARTVerboseFlag);
 263              		.loc 1 210 0
 264 00ea A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 265 00ec EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
 266 00ee 43EAC111 		orr	r1, r3, r1, lsl #7
 267 00f2 C9B2     		uxtb	r1, r1
 268 00f4 0D4B     		ldr	r3, .L21+4
 269 00f6 1970     		strb	r1, [r3]
 211:InterruptRoutines.c ****                 EEPROM_writeByte(DATA_REGISTER_ADDRESS, data_register);
 270              		.loc 1 211 0
 271 00f8 2046     		mov	r0, r4
 272 00fa FFF7FEFF 		bl	EEPROM_writeByte
 273              	.LVL23:
 212:InterruptRoutines.c ****                 EEPROM_waitForWriteComplete();
 274              		.loc 1 212 0
 275 00fe FFF7FEFF 		bl	EEPROM_waitForWriteComplete
 276              	.LVL24:
 213:InterruptRoutines.c ****                 RGBLed_WriteColor(OFF, OFF, OFF);
 277              		.loc 1 213 0
 278 0102 2246     		mov	r2, r4
 279 0104 2146     		mov	r1, r4
 280 0106 2046     		mov	r0, r4
 281 0108 FFF7FEFF 		bl	RGBLed_WriteColor
 282              	.LVL25:
 214:InterruptRoutines.c ****                 SPIM_1_Stop();
 283              		.loc 1 214 0
 284 010c FFF7FEFF 		bl	SPIM_1_Stop
 285              	.LVL26:
 215:InterruptRoutines.c ****                 //SPIM_2_Stop();
 216:InterruptRoutines.c ****                 UART_1_Stop();
 286              		.loc 1 216 0
 287 0110 FFF7FEFF 		bl	UART_1_Stop
 288              	.LVL27:
 289              	.L19:
 217:InterruptRoutines.c ****                 //RGBLed_Stop();
 218:InterruptRoutines.c ****             }
 219:InterruptRoutines.c ****             //flag cleared
 220:InterruptRoutines.c ****             TimerFlag=0;  
 290              		.loc 1 220 0
 291 0114 0022     		movs	r2, #0
 292 0116 044B     		ldr	r3, .L21
 293 0118 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 10


 221:InterruptRoutines.c ****     		break;
 294              		.loc 1 221 0
 295 011a 38BD     		pop	{r3, r4, r5, pc}
 296              	.L17:
 222:InterruptRoutines.c ****             
 223:InterruptRoutines.c ****     		case 2: 
 224:InterruptRoutines.c ****             /*
 225:InterruptRoutines.c ****             time over 500ms--> TIME OVERFLOW OCCURED, FLAG=2, so it is not considered as a double c
 226:InterruptRoutines.c ****             Anyway, it could be considered as the first click of a double click, 
 227:InterruptRoutines.c ****             so the system will check the second pressing if it is before 500 ms.
 228:InterruptRoutines.c ****             */
 229:InterruptRoutines.c ****             TimerFlag=1;
 297              		.loc 1 229 0
 298 011c 0122     		movs	r2, #1
 299 011e 024B     		ldr	r3, .L21
 300 0120 1A71     		strb	r2, [r3, #4]
 230:InterruptRoutines.c ****             /*
 231:InterruptRoutines.c ****             if the button has been released, and it was not a long pressure, that is identified as 
 232:InterruptRoutines.c ****             TIMER button start, that is the one used to measure the time intercurring between two c
 233:InterruptRoutines.c ****             it will be stopped in the NEGATIVE isr of the next debounced pressure
 234:InterruptRoutines.c ****             */
 235:InterruptRoutines.c ****             TIMER_button_Start();
 301              		.loc 1 235 0
 302 0122 FFF7FEFF 		bl	TIMER_button_Start
 303              	.LVL28:
 304              	.L9:
 305 0126 38BD     		pop	{r3, r4, r5, pc}
 306              	.L22:
 307              		.align	2
 308              	.L21:
 309 0128 00000000 		.word	.LANCHOR0
 310 012c 00000000 		.word	data_register
 311              		.cfi_endproc
 312              	.LFE66:
 313              		.size	Custom_Pin_Button_Positive, .-Custom_Pin_Button_Positive
 314              		.section	.text.Custom_Timer_Button,"ax",%progbits
 315              		.align	2
 316              		.global	Custom_Timer_Button
 317              		.thumb
 318              		.thumb_func
 319              		.type	Custom_Timer_Button, %function
 320              	Custom_Timer_Button:
 321              	.LFB67:
 236:InterruptRoutines.c ****     		    
 237:InterruptRoutines.c ****     		break;
 238:InterruptRoutines.c ****             
 239:InterruptRoutines.c ****         }
 240:InterruptRoutines.c **** 
 241:InterruptRoutines.c ****     }
 242:InterruptRoutines.c **** }
 243:InterruptRoutines.c **** 
 244:InterruptRoutines.c **** CY_ISR(Custom_Timer_Button){
 322              		.loc 1 244 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 11


 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 3, -8
 329              		.cfi_offset 14, -4
 245:InterruptRoutines.c ****     /* TIMER for double click interval. this timer has been started from previous ISR only after po
 246:InterruptRoutines.c ****     it it reaches overflow before next button negative edge, the flag is set to 2
 247:InterruptRoutines.c ****     */
 248:InterruptRoutines.c ****     TimerFlag=2;
 330              		.loc 1 248 0
 331 0002 0222     		movs	r2, #2
 332 0004 024B     		ldr	r3, .L25
 333 0006 1A71     		strb	r2, [r3, #4]
 249:InterruptRoutines.c ****     TIMER_button_ReadStatusRegister();
 334              		.loc 1 249 0
 335 0008 FFF7FEFF 		bl	TIMER_button_ReadStatusRegister
 336              	.LVL29:
 337 000c 08BD     		pop	{r3, pc}
 338              	.L26:
 339 000e 00BF     		.align	2
 340              	.L25:
 341 0010 00000000 		.word	.LANCHOR0
 342              		.cfi_endproc
 343              	.LFE67:
 344              		.size	Custom_Timer_Button, .-Custom_Timer_Button
 345              		.section	.text.Custom_LED_Blinking,"ax",%progbits
 346              		.align	2
 347              		.global	Custom_LED_Blinking
 348              		.thumb
 349              		.thumb_func
 350              		.type	Custom_LED_Blinking, %function
 351              	Custom_LED_Blinking:
 352              	.LFB68:
 250:InterruptRoutines.c **** 
 251:InterruptRoutines.c **** }
 252:InterruptRoutines.c **** 
 253:InterruptRoutines.c **** CY_ISR(Custom_LED_Blinking){
 353              		.loc 1 253 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 08B5     		push	{r3, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 3, -8
 360              		.cfi_offset 14, -4
 254:InterruptRoutines.c ****     /* ISR on overflow 250 ms
 255:InterruptRoutines.c ****     double function:
 256:InterruptRoutines.c ****     1. toggle the led if configuration mode
 257:InterruptRoutines.c ****     2. count the time between NEGATIVE (pressed) and POSITIVE (released)
 258:InterruptRoutines.c ****     edge of the debouncer
 259:InterruptRoutines.c ****     */
 260:InterruptRoutines.c ****     Timer_Blinking_ReadStatusRegister();
 361              		.loc 1 260 0
 362 0002 FFF7FEFF 		bl	Timer_Blinking_ReadStatusRegister
 363              	.LVL30:
 261:InterruptRoutines.c ****     i=i+1;
 364              		.loc 1 261 0
 365 0006 1B4B     		ldr	r3, .L33
 366 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 12


 367 000a 0132     		adds	r2, r2, #1
 368 000c 1A70     		strb	r2, [r3]
 262:InterruptRoutines.c ****     if (configuration_status==1){
 369              		.loc 1 262 0
 370 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 371 0010 012B     		cmp	r3, #1
 372 0012 2DD1     		bne	.L27
 263:InterruptRoutines.c ****         Pin_Led_Blue_Write(!Pin_Led_Blue_Read());
 373              		.loc 1 263 0
 374 0014 FFF7FEFF 		bl	Pin_Led_Blue_Read
 375              	.LVL31:
 376 0018 B0FA80F0 		clz	r0, r0
 377 001c 4009     		lsrs	r0, r0, #5
 378 001e FFF7FEFF 		bl	Pin_Led_Blue_Write
 379              	.LVL32:
 264:InterruptRoutines.c ****         value_POT = ADC_DelSig_Read32();
 380              		.loc 1 264 0
 381 0022 FFF7FEFF 		bl	ADC_DelSig_Read32
 382              	.LVL33:
 383 0026 144B     		ldr	r3, .L33+4
 384 0028 1860     		str	r0, [r3]
 265:InterruptRoutines.c ****         
 266:InterruptRoutines.c ****         
 267:InterruptRoutines.c ****         if (value_POT < FULL_SCALE_RANGE_LOW) value_POT = FULL_SCALE_RANGE_LOW;
 385              		.loc 1 267 0
 386 002a 0028     		cmp	r0, #0
 387 002c 01DA     		bge	.L29
 388              		.loc 1 267 0 is_stmt 0 discriminator 1
 389 002e 0022     		movs	r2, #0
 390 0030 1A60     		str	r2, [r3]
 391              	.L29:
 268:InterruptRoutines.c ****         if (value_POT > FULL_SCALE_RANGE_HIGH) value_POT = FULL_SCALE_RANGE_HIGH;
 392              		.loc 1 268 0 is_stmt 1
 393 0032 114B     		ldr	r3, .L33+4
 394 0034 1B68     		ldr	r3, [r3]
 395 0036 B3F5803F 		cmp	r3, #65536
 396 003a 03DB     		blt	.L30
 397              		.loc 1 268 0 is_stmt 0 discriminator 1
 398 003c 4FF6FF72 		movw	r2, #65535
 399 0040 0D4B     		ldr	r3, .L33+4
 400 0042 1A60     		str	r2, [r3]
 401              	.L30:
 269:InterruptRoutines.c ****         
 270:InterruptRoutines.c ****         if(FlagEnableDisable){
 402              		.loc 1 270 0 is_stmt 1
 403 0044 0D4B     		ldr	r3, .L33+8
 404 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 405 0048 13F0FF0F 		tst	r3, #255
 406 004c 10D0     		beq	.L27
 271:InterruptRoutines.c ****             if (value_POT < FULL_SCALE_RANGE_HALF){
 407              		.loc 1 271 0
 408 004e 0A4B     		ldr	r3, .L33+4
 409 0050 1A68     		ldr	r2, [r3]
 410 0052 47F6FE73 		movw	r3, #32766
 411 0056 9A42     		cmp	r2, r3
 412 0058 05DC     		bgt	.L31
 272:InterruptRoutines.c ****                 UARTVerboseFlag = OFF;
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 13


 413              		.loc 1 272 0
 414 005a 0020     		movs	r0, #0
 415 005c 054B     		ldr	r3, .L33
 416 005e D870     		strb	r0, [r3, #3]
 273:InterruptRoutines.c ****                 Pin_RED_UARTVerboseFlag_Write(OFF);
 417              		.loc 1 273 0
 418 0060 FFF7FEFF 		bl	Pin_RED_UARTVerboseFlag_Write
 419              	.LVL34:
 420 0064 08BD     		pop	{r3, pc}
 421              	.L31:
 274:InterruptRoutines.c ****             }
 275:InterruptRoutines.c ****             else{
 276:InterruptRoutines.c ****                 UARTVerboseFlag = ON;
 422              		.loc 1 276 0
 423 0066 0120     		movs	r0, #1
 424 0068 024B     		ldr	r3, .L33
 425 006a D870     		strb	r0, [r3, #3]
 277:InterruptRoutines.c ****                 Pin_RED_UARTVerboseFlag_Write(ON);
 426              		.loc 1 277 0
 427 006c FFF7FEFF 		bl	Pin_RED_UARTVerboseFlag_Write
 428              	.LVL35:
 429              	.L27:
 430 0070 08BD     		pop	{r3, pc}
 431              	.L34:
 432 0072 00BF     		.align	2
 433              	.L33:
 434 0074 00000000 		.word	.LANCHOR0
 435 0078 00000000 		.word	value_POT
 436 007c 00000000 		.word	FlagEnableDisable
 437              		.cfi_endproc
 438              	.LFE68:
 439              		.size	Custom_LED_Blinking, .-Custom_LED_Blinking
 440              		.section	.text.Custom_Pin_EnableDisable,"ax",%progbits
 441              		.align	2
 442              		.global	Custom_Pin_EnableDisable
 443              		.thumb
 444              		.thumb_func
 445              		.type	Custom_Pin_EnableDisable, %function
 446              	Custom_Pin_EnableDisable:
 447              	.LFB69:
 278:InterruptRoutines.c ****             }
 279:InterruptRoutines.c ****         }
 280:InterruptRoutines.c ****     }    
 281:InterruptRoutines.c ****     
 282:InterruptRoutines.c **** }
 283:InterruptRoutines.c **** CY_ISR(Custom_Pin_EnableDisable){
 448              		.loc 1 283 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452 0000 08B5     		push	{r3, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
 284:InterruptRoutines.c ****     
 285:InterruptRoutines.c ****     Pin_EnableDisable_ClearInterrupt();
 456              		.loc 1 285 0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 14


 457 0002 FFF7FEFF 		bl	Pin_EnableDisable_ClearInterrupt
 458              	.LVL36:
 286:InterruptRoutines.c ****     
 287:InterruptRoutines.c ****     FlagEnableDisable=Pin_EnableDisable_Read();
 459              		.loc 1 287 0
 460 0006 FFF7FEFF 		bl	Pin_EnableDisable_Read
 461              	.LVL37:
 462 000a 014B     		ldr	r3, .L37
 463 000c 1870     		strb	r0, [r3]
 464 000e 08BD     		pop	{r3, pc}
 465              	.L38:
 466              		.align	2
 467              	.L37:
 468 0010 00000000 		.word	FlagEnableDisable
 469              		.cfi_endproc
 470              	.LFE69:
 471              		.size	Custom_Pin_EnableDisable, .-Custom_Pin_EnableDisable
 472              		.global	i
 473              		.comm	data_register,1,1
 474              		.comm	value_POT,4,4
 475              		.global	TimerFlag
 476              		.global	configuration_status
 477              		.global	system_status
 478              		.comm	bufferUART,100,4
 479              		.comm	FlagEnableDisable,1,1
 480              		.comm	data_water,1,1
 481              		.global	UARTVerboseFlag
 482              		.comm	PacketReadyFlag,1,1
 483              		.bss
 484              		.set	.LANCHOR0,. + 0
 485              		.type	i, %object
 486              		.size	i, 1
 487              	i:
 488 0000 00       		.space	1
 489              		.type	configuration_status, %object
 490              		.size	configuration_status, 1
 491              	configuration_status:
 492 0001 00       		.space	1
 493              		.type	system_status, %object
 494              		.size	system_status, 1
 495              	system_status:
 496 0002 00       		.space	1
 497              		.type	UARTVerboseFlag, %object
 498              		.size	UARTVerboseFlag, 1
 499              	UARTVerboseFlag:
 500 0003 00       		.space	1
 501              		.type	TimerFlag, %object
 502              		.size	TimerFlag, 1
 503              	TimerFlag:
 504 0004 00       		.space	1
 505              		.text
 506              	.Letext0:
 507              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 508              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 509              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 510              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 511              		.file 6 "InterruptRoutines.h"
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 15


 512              		.file 7 "Generated_Source\\PSoC5/Pin_ISR.h"
 513              		.file 8 "Generated_Source\\PSoC5/TIMER_button.h"
 514              		.file 9 "Generated_Source\\PSoC5/Timer_Blinking.h"
 515              		.file 10 "RGBLedDriver.h"
 516              		.file 11 "Generated_Source\\PSoC5/SPIM_1.h"
 517              		.file 12 "Generated_Source\\PSoC5/UART_1.h"
 518              		.file 13 "25LC256.h"
 519              		.file 14 "Generated_Source\\PSoC5/Pin_Led_Blue.h"
 520              		.file 15 "Generated_Source\\PSoC5/ADC_DelSig.h"
 521              		.file 16 "Generated_Source\\PSoC5/Pin_RED_UARTVerboseFlag.h"
 522              		.file 17 "Generated_Source\\PSoC5/Pin_EnableDisable.h"
 523              		.section	.debug_info,"",%progbits
 524              	.Ldebug_info0:
 525 0000 F3040000 		.4byte	0x4f3
 526 0004 0400     		.2byte	0x4
 527 0006 00000000 		.4byte	.Ldebug_abbrev0
 528 000a 04       		.byte	0x4
 529 000b 01       		.uleb128 0x1
 530 000c 13010000 		.4byte	.LASF58
 531 0010 0C       		.byte	0xc
 532 0011 C2040000 		.4byte	.LASF59
 533 0015 BF030000 		.4byte	.LASF60
 534 0019 00000000 		.4byte	.Ldebug_ranges0+0
 535 001d 00000000 		.4byte	0
 536 0021 00000000 		.4byte	.Ldebug_line0
 537 0025 02       		.uleb128 0x2
 538 0026 01       		.byte	0x1
 539 0027 06       		.byte	0x6
 540 0028 64040000 		.4byte	.LASF0
 541 002c 03       		.uleb128 0x3
 542 002d 32000000 		.4byte	.LASF4
 543 0031 02       		.byte	0x2
 544 0032 1D       		.byte	0x1d
 545 0033 37000000 		.4byte	0x37
 546 0037 02       		.uleb128 0x2
 547 0038 01       		.byte	0x1
 548 0039 08       		.byte	0x8
 549 003a 05010000 		.4byte	.LASF1
 550 003e 02       		.uleb128 0x2
 551 003f 02       		.byte	0x2
 552 0040 05       		.byte	0x5
 553 0041 46020000 		.4byte	.LASF2
 554 0045 02       		.uleb128 0x2
 555 0046 02       		.byte	0x2
 556 0047 07       		.byte	0x7
 557 0048 72000000 		.4byte	.LASF3
 558 004c 03       		.uleb128 0x3
 559 004d 53000000 		.4byte	.LASF5
 560 0051 02       		.byte	0x2
 561 0052 3F       		.byte	0x3f
 562 0053 57000000 		.4byte	0x57
 563 0057 02       		.uleb128 0x2
 564 0058 04       		.byte	0x4
 565 0059 05       		.byte	0x5
 566 005a 4F040000 		.4byte	.LASF6
 567 005e 02       		.uleb128 0x2
 568 005f 04       		.byte	0x4
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 16


 569 0060 07       		.byte	0x7
 570 0061 C0010000 		.4byte	.LASF7
 571 0065 02       		.uleb128 0x2
 572 0066 08       		.byte	0x8
 573 0067 05       		.byte	0x5
 574 0068 14030000 		.4byte	.LASF8
 575 006c 02       		.uleb128 0x2
 576 006d 08       		.byte	0x8
 577 006e 07       		.byte	0x7
 578 006f 97020000 		.4byte	.LASF9
 579 0073 04       		.uleb128 0x4
 580 0074 04       		.byte	0x4
 581 0075 05       		.byte	0x5
 582 0076 696E7400 		.ascii	"int\000"
 583 007a 02       		.uleb128 0x2
 584 007b 04       		.byte	0x4
 585 007c 07       		.byte	0x7
 586 007d 77020000 		.4byte	.LASF10
 587 0081 03       		.uleb128 0x3
 588 0082 AE020000 		.4byte	.LASF11
 589 0086 03       		.byte	0x3
 590 0087 18       		.byte	0x18
 591 0088 2C000000 		.4byte	0x2c
 592 008c 03       		.uleb128 0x3
 593 008d D0000000 		.4byte	.LASF12
 594 0091 03       		.byte	0x3
 595 0092 2C       		.byte	0x2c
 596 0093 4C000000 		.4byte	0x4c
 597 0097 05       		.uleb128 0x5
 598 0098 FF000000 		.4byte	.LASF13
 599 009c 04       		.byte	0x4
 600 009d E401     		.2byte	0x1e4
 601 009f 37000000 		.4byte	0x37
 602 00a3 05       		.uleb128 0x5
 603 00a4 DD010000 		.4byte	.LASF14
 604 00a8 04       		.byte	0x4
 605 00a9 E901     		.2byte	0x1e9
 606 00ab 57000000 		.4byte	0x57
 607 00af 02       		.uleb128 0x2
 608 00b0 04       		.byte	0x4
 609 00b1 04       		.byte	0x4
 610 00b2 F9000000 		.4byte	.LASF15
 611 00b6 02       		.uleb128 0x2
 612 00b7 08       		.byte	0x8
 613 00b8 04       		.byte	0x4
 614 00b9 9C000000 		.4byte	.LASF16
 615 00bd 02       		.uleb128 0x2
 616 00be 01       		.byte	0x1
 617 00bf 08       		.byte	0x8
 618 00c0 22030000 		.4byte	.LASF17
 619 00c4 06       		.uleb128 0x6
 620 00c5 97000000 		.4byte	0x97
 621 00c9 02       		.uleb128 0x2
 622 00ca 08       		.byte	0x8
 623 00cb 04       		.byte	0x4
 624 00cc 58040000 		.4byte	.LASF18
 625 00d0 02       		.uleb128 0x2
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 17


 626 00d1 04       		.byte	0x4
 627 00d2 07       		.byte	0x7
 628 00d3 0B030000 		.4byte	.LASF19
 629 00d7 07       		.uleb128 0x7
 630 00d8 89030000 		.4byte	.LASF20
 631 00dc 01       		.byte	0x1
 632 00dd 29       		.byte	0x29
 633 00de 00000000 		.4byte	.LFB64
 634 00e2 14000000 		.4byte	.LFE64-.LFB64
 635 00e6 01       		.uleb128 0x1
 636 00e7 9C       		.byte	0x9c
 637 00e8 F6000000 		.4byte	0xf6
 638 00ec 08       		.uleb128 0x8
 639 00ed 0C000000 		.4byte	.LVL0
 640 00f1 0F040000 		.4byte	0x40f
 641 00f5 00       		.byte	0
 642 00f6 07       		.uleb128 0x7
 643 00f7 AD030000 		.4byte	.LASF21
 644 00fb 01       		.byte	0x1
 645 00fc 52       		.byte	0x52
 646 00fd 00000000 		.4byte	.LFB65
 647 0101 18000000 		.4byte	.LFE65-.LFB65
 648 0105 01       		.uleb128 0x1
 649 0106 9C       		.byte	0x9c
 650 0107 1E010000 		.4byte	0x11e
 651 010b 08       		.uleb128 0x8
 652 010c 06000000 		.4byte	.LVL1
 653 0110 1A040000 		.4byte	0x41a
 654 0114 08       		.uleb128 0x8
 655 0115 0A000000 		.4byte	.LVL2
 656 0119 25040000 		.4byte	0x425
 657 011d 00       		.byte	0
 658 011e 07       		.uleb128 0x7
 659 011f A3000000 		.4byte	.LASF22
 660 0123 01       		.byte	0x1
 661 0124 63       		.byte	0x63
 662 0125 00000000 		.4byte	.LFB66
 663 0129 30010000 		.4byte	.LFE66-.LFB66
 664 012d 01       		.uleb128 0x1
 665 012e 9C       		.byte	0x9c
 666 012f 91020000 		.4byte	0x291
 667 0133 09       		.uleb128 0x9
 668 0134 20000000 		.4byte	.LVL3
 669 0138 30040000 		.4byte	0x430
 670 013c 50010000 		.4byte	0x150
 671 0140 0A       		.uleb128 0xa
 672 0141 01       		.uleb128 0x1
 673 0142 50       		.byte	0x50
 674 0143 01       		.uleb128 0x1
 675 0144 30       		.byte	0x30
 676 0145 0A       		.uleb128 0xa
 677 0146 01       		.uleb128 0x1
 678 0147 51       		.byte	0x51
 679 0148 01       		.uleb128 0x1
 680 0149 30       		.byte	0x30
 681 014a 0A       		.uleb128 0xa
 682 014b 01       		.uleb128 0x1
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 18


 683 014c 52       		.byte	0x52
 684 014d 01       		.uleb128 0x1
 685 014e 30       		.byte	0x30
 686 014f 00       		.byte	0
 687 0150 08       		.uleb128 0x8
 688 0151 24000000 		.4byte	.LVL4
 689 0155 3B040000 		.4byte	0x43b
 690 0159 08       		.uleb128 0x8
 691 015a 28000000 		.4byte	.LVL5
 692 015e 46040000 		.4byte	0x446
 693 0162 08       		.uleb128 0x8
 694 0163 2C000000 		.4byte	.LVL6
 695 0167 25040000 		.4byte	0x425
 696 016b 09       		.uleb128 0x9
 697 016c 4A000000 		.4byte	.LVL7
 698 0170 51040000 		.4byte	0x451
 699 0174 7E010000 		.4byte	0x17e
 700 0178 0A       		.uleb128 0xa
 701 0179 01       		.uleb128 0x1
 702 017a 50       		.byte	0x50
 703 017b 01       		.uleb128 0x1
 704 017c 30       		.byte	0x30
 705 017d 00       		.byte	0
 706 017e 09       		.uleb128 0x9
 707 017f 54000000 		.4byte	.LVL8
 708 0183 5C040000 		.4byte	0x45c
 709 0187 91010000 		.4byte	0x191
 710 018b 0A       		.uleb128 0xa
 711 018c 01       		.uleb128 0x1
 712 018d 50       		.byte	0x50
 713 018e 01       		.uleb128 0x1
 714 018f 30       		.byte	0x30
 715 0190 00       		.byte	0
 716 0191 09       		.uleb128 0x9
 717 0192 60000000 		.4byte	.LVL9
 718 0196 5C040000 		.4byte	0x45c
 719 019a A4010000 		.4byte	0x1a4
 720 019e 0A       		.uleb128 0xa
 721 019f 01       		.uleb128 0x1
 722 01a0 50       		.byte	0x50
 723 01a1 01       		.uleb128 0x1
 724 01a2 31       		.byte	0x31
 725 01a3 00       		.byte	0
 726 01a4 08       		.uleb128 0x8
 727 01a5 64000000 		.4byte	.LVL10
 728 01a9 67040000 		.4byte	0x467
 729 01ad 08       		.uleb128 0x8
 730 01ae 68000000 		.4byte	.LVL11
 731 01b2 72040000 		.4byte	0x472
 732 01b6 08       		.uleb128 0x8
 733 01b7 6C000000 		.4byte	.LVL12
 734 01bb 7D040000 		.4byte	0x47d
 735 01bf 08       		.uleb128 0x8
 736 01c0 70000000 		.4byte	.LVL13
 737 01c4 88040000 		.4byte	0x488
 738 01c8 08       		.uleb128 0x8
 739 01c9 9E000000 		.4byte	.LVL14
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 19


 740 01cd 93040000 		.4byte	0x493
 741 01d1 09       		.uleb128 0x9
 742 01d2 B0000000 		.4byte	.LVL15
 743 01d6 5C040000 		.4byte	0x45c
 744 01da E4010000 		.4byte	0x1e4
 745 01de 0A       		.uleb128 0xa
 746 01df 01       		.uleb128 0x1
 747 01e0 50       		.byte	0x50
 748 01e1 01       		.uleb128 0x1
 749 01e2 31       		.byte	0x31
 750 01e3 00       		.byte	0
 751 01e4 08       		.uleb128 0x8
 752 01e5 B4000000 		.4byte	.LVL16
 753 01e9 67040000 		.4byte	0x467
 754 01ed 08       		.uleb128 0x8
 755 01ee B8000000 		.4byte	.LVL17
 756 01f2 72040000 		.4byte	0x472
 757 01f6 08       		.uleb128 0x8
 758 01f7 BC000000 		.4byte	.LVL18
 759 01fb 7D040000 		.4byte	0x47d
 760 01ff 08       		.uleb128 0x8
 761 0200 C0000000 		.4byte	.LVL19
 762 0204 88040000 		.4byte	0x488
 763 0208 09       		.uleb128 0x9
 764 0209 D4000000 		.4byte	.LVL20
 765 020d 51040000 		.4byte	0x451
 766 0211 1B020000 		.4byte	0x21b
 767 0215 0A       		.uleb128 0xa
 768 0216 01       		.uleb128 0x1
 769 0217 50       		.byte	0x50
 770 0218 01       		.uleb128 0x1
 771 0219 30       		.byte	0x30
 772 021a 00       		.byte	0
 773 021b 08       		.uleb128 0x8
 774 021c D8000000 		.4byte	.LVL21
 775 0220 9E040000 		.4byte	0x49e
 776 0224 09       		.uleb128 0x9
 777 0225 EA000000 		.4byte	.LVL22
 778 0229 5C040000 		.4byte	0x45c
 779 022d 38020000 		.4byte	0x238
 780 0231 0A       		.uleb128 0xa
 781 0232 01       		.uleb128 0x1
 782 0233 50       		.byte	0x50
 783 0234 02       		.uleb128 0x2
 784 0235 74       		.byte	0x74
 785 0236 00       		.sleb128 0
 786 0237 00       		.byte	0
 787 0238 09       		.uleb128 0x9
 788 0239 FE000000 		.4byte	.LVL23
 789 023d 51040000 		.4byte	0x451
 790 0241 4C020000 		.4byte	0x24c
 791 0245 0A       		.uleb128 0xa
 792 0246 01       		.uleb128 0x1
 793 0247 50       		.byte	0x50
 794 0248 02       		.uleb128 0x2
 795 0249 74       		.byte	0x74
 796 024a 00       		.sleb128 0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 20


 797 024b 00       		.byte	0
 798 024c 08       		.uleb128 0x8
 799 024d 02010000 		.4byte	.LVL24
 800 0251 9E040000 		.4byte	0x49e
 801 0255 09       		.uleb128 0x9
 802 0256 0C010000 		.4byte	.LVL25
 803 025a 30040000 		.4byte	0x430
 804 025e 75020000 		.4byte	0x275
 805 0262 0A       		.uleb128 0xa
 806 0263 01       		.uleb128 0x1
 807 0264 50       		.byte	0x50
 808 0265 02       		.uleb128 0x2
 809 0266 74       		.byte	0x74
 810 0267 00       		.sleb128 0
 811 0268 0A       		.uleb128 0xa
 812 0269 01       		.uleb128 0x1
 813 026a 51       		.byte	0x51
 814 026b 02       		.uleb128 0x2
 815 026c 74       		.byte	0x74
 816 026d 00       		.sleb128 0
 817 026e 0A       		.uleb128 0xa
 818 026f 01       		.uleb128 0x1
 819 0270 52       		.byte	0x52
 820 0271 02       		.uleb128 0x2
 821 0272 74       		.byte	0x74
 822 0273 00       		.sleb128 0
 823 0274 00       		.byte	0
 824 0275 08       		.uleb128 0x8
 825 0276 10010000 		.4byte	.LVL26
 826 027a 3B040000 		.4byte	0x43b
 827 027e 08       		.uleb128 0x8
 828 027f 14010000 		.4byte	.LVL27
 829 0283 46040000 		.4byte	0x446
 830 0287 08       		.uleb128 0x8
 831 0288 26010000 		.4byte	.LVL28
 832 028c 93040000 		.4byte	0x493
 833 0290 00       		.byte	0
 834 0291 07       		.uleb128 0x7
 835 0292 DB020000 		.4byte	.LASF23
 836 0296 01       		.byte	0x1
 837 0297 F4       		.byte	0xf4
 838 0298 00000000 		.4byte	.LFB67
 839 029c 14000000 		.4byte	.LFE67-.LFB67
 840 02a0 01       		.uleb128 0x1
 841 02a1 9C       		.byte	0x9c
 842 02a2 B0020000 		.4byte	0x2b0
 843 02a6 08       		.uleb128 0x8
 844 02a7 0C000000 		.4byte	.LVL29
 845 02ab A9040000 		.4byte	0x4a9
 846 02af 00       		.byte	0
 847 02b0 07       		.uleb128 0x7
 848 02b1 11000000 		.4byte	.LASF24
 849 02b5 01       		.byte	0x1
 850 02b6 FD       		.byte	0xfd
 851 02b7 00000000 		.4byte	.LFB68
 852 02bb 80000000 		.4byte	.LFE68-.LFB68
 853 02bf 01       		.uleb128 0x1
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 21


 854 02c0 9C       		.byte	0x9c
 855 02c1 0C030000 		.4byte	0x30c
 856 02c5 08       		.uleb128 0x8
 857 02c6 06000000 		.4byte	.LVL30
 858 02ca B4040000 		.4byte	0x4b4
 859 02ce 08       		.uleb128 0x8
 860 02cf 18000000 		.4byte	.LVL31
 861 02d3 BF040000 		.4byte	0x4bf
 862 02d7 08       		.uleb128 0x8
 863 02d8 22000000 		.4byte	.LVL32
 864 02dc 5C040000 		.4byte	0x45c
 865 02e0 08       		.uleb128 0x8
 866 02e1 26000000 		.4byte	.LVL33
 867 02e5 CA040000 		.4byte	0x4ca
 868 02e9 09       		.uleb128 0x9
 869 02ea 64000000 		.4byte	.LVL34
 870 02ee D5040000 		.4byte	0x4d5
 871 02f2 FC020000 		.4byte	0x2fc
 872 02f6 0A       		.uleb128 0xa
 873 02f7 01       		.uleb128 0x1
 874 02f8 50       		.byte	0x50
 875 02f9 01       		.uleb128 0x1
 876 02fa 30       		.byte	0x30
 877 02fb 00       		.byte	0
 878 02fc 0B       		.uleb128 0xb
 879 02fd 70000000 		.4byte	.LVL35
 880 0301 D5040000 		.4byte	0x4d5
 881 0305 0A       		.uleb128 0xa
 882 0306 01       		.uleb128 0x1
 883 0307 50       		.byte	0x50
 884 0308 01       		.uleb128 0x1
 885 0309 31       		.byte	0x31
 886 030a 00       		.byte	0
 887 030b 00       		.byte	0
 888 030c 0C       		.uleb128 0xc
 889 030d 90040000 		.4byte	.LASF25
 890 0311 01       		.byte	0x1
 891 0312 1B01     		.2byte	0x11b
 892 0314 00000000 		.4byte	.LFB69
 893 0318 14000000 		.4byte	.LFE69-.LFB69
 894 031c 01       		.uleb128 0x1
 895 031d 9C       		.byte	0x9c
 896 031e 35030000 		.4byte	0x335
 897 0322 08       		.uleb128 0x8
 898 0323 06000000 		.4byte	.LVL36
 899 0327 E0040000 		.4byte	0x4e0
 900 032b 08       		.uleb128 0x8
 901 032c 0A000000 		.4byte	.LVL37
 902 0330 EB040000 		.4byte	0x4eb
 903 0334 00       		.byte	0
 904 0335 0D       		.uleb128 0xd
 905 0336 50020000 		.4byte	.LASF26
 906 033a 05       		.byte	0x5
 907 033b 1207     		.2byte	0x712
 908 033d 41030000 		.4byte	0x341
 909 0341 06       		.uleb128 0x6
 910 0342 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 22


 911 0346 0E       		.uleb128 0xe
 912 0347 79030000 		.4byte	.LASF27
 913 034b 06       		.byte	0x6
 914 034c 18       		.byte	0x18
 915 034d C4000000 		.4byte	0xc4
 916 0351 05       		.uleb128 0x5
 917 0352 03       		.byte	0x3
 918 0353 00000000 		.4byte	PacketReadyFlag
 919 0357 0E       		.uleb128 0xe
 920 0358 67020000 		.4byte	.LASF28
 921 035c 01       		.byte	0x1
 922 035d 27       		.byte	0x27
 923 035e 97000000 		.4byte	0x97
 924 0362 05       		.uleb128 0x5
 925 0363 03       		.byte	0x3
 926 0364 00000000 		.4byte	UARTVerboseFlag
 927 0368 0E       		.uleb128 0xe
 928 0369 D2010000 		.4byte	.LASF29
 929 036d 06       		.byte	0x6
 930 036e 1B       		.byte	0x1b
 931 036f 97000000 		.4byte	0x97
 932 0373 05       		.uleb128 0x5
 933 0374 03       		.byte	0x3
 934 0375 00000000 		.4byte	data_water
 935 0379 0E       		.uleb128 0xe
 936 037a 33030000 		.4byte	.LASF30
 937 037e 06       		.byte	0x6
 938 037f 1C       		.byte	0x1c
 939 0380 C4000000 		.4byte	0xc4
 940 0384 05       		.uleb128 0x5
 941 0385 03       		.byte	0x3
 942 0386 00000000 		.4byte	FlagEnableDisable
 943 038a 0F       		.uleb128 0xf
 944 038b BD000000 		.4byte	0xbd
 945 038f 9A030000 		.4byte	0x39a
 946 0393 10       		.uleb128 0x10
 947 0394 D0000000 		.4byte	0xd0
 948 0398 63       		.byte	0x63
 949 0399 00       		.byte	0
 950 039a 0E       		.uleb128 0xe
 951 039b B7040000 		.4byte	.LASF31
 952 039f 01       		.byte	0x1
 953 03a0 12       		.byte	0x12
 954 03a1 8A030000 		.4byte	0x38a
 955 03a5 05       		.uleb128 0x5
 956 03a6 03       		.byte	0x3
 957 03a7 00000000 		.4byte	bufferUART
 958 03ab 0E       		.uleb128 0xe
 959 03ac B6020000 		.4byte	.LASF32
 960 03b0 01       		.byte	0x1
 961 03b1 1F       		.byte	0x1f
 962 03b2 81000000 		.4byte	0x81
 963 03b6 05       		.uleb128 0x5
 964 03b7 03       		.byte	0x3
 965 03b8 00000000 		.4byte	system_status
 966 03bc 0E       		.uleb128 0xe
 967 03bd 5D000000 		.4byte	.LASF33
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 23


 968 03c1 01       		.byte	0x1
 969 03c2 20       		.byte	0x20
 970 03c3 81000000 		.4byte	0x81
 971 03c7 05       		.uleb128 0x5
 972 03c8 03       		.byte	0x3
 973 03c9 00000000 		.4byte	configuration_status
 974 03cd 0E       		.uleb128 0xe
 975 03ce 3C000000 		.4byte	.LASF34
 976 03d2 01       		.byte	0x1
 977 03d3 21       		.byte	0x21
 978 03d4 97000000 		.4byte	0x97
 979 03d8 05       		.uleb128 0x5
 980 03d9 03       		.byte	0x3
 981 03da 00000000 		.4byte	TimerFlag
 982 03de 0E       		.uleb128 0xe
 983 03df 5D020000 		.4byte	.LASF35
 984 03e3 01       		.byte	0x1
 985 03e4 22       		.byte	0x22
 986 03e5 A3000000 		.4byte	0xa3
 987 03e9 05       		.uleb128 0x5
 988 03ea 03       		.byte	0x3
 989 03eb 00000000 		.4byte	value_POT
 990 03ef 0E       		.uleb128 0xe
 991 03f0 A9040000 		.4byte	.LASF36
 992 03f4 01       		.byte	0x1
 993 03f5 23       		.byte	0x23
 994 03f6 97000000 		.4byte	0x97
 995 03fa 05       		.uleb128 0x5
 996 03fb 03       		.byte	0x3
 997 03fc 00000000 		.4byte	data_register
 998 0400 11       		.uleb128 0x11
 999 0401 6900     		.ascii	"i\000"
 1000 0403 01       		.byte	0x1
 1001 0404 25       		.byte	0x25
 1002 0405 81000000 		.4byte	0x81
 1003 0409 05       		.uleb128 0x5
 1004 040a 03       		.byte	0x3
 1005 040b 00000000 		.4byte	i
 1006 040f 12       		.uleb128 0x12
 1007 0410 85000000 		.4byte	.LASF37
 1008 0414 85000000 		.4byte	.LASF37
 1009 0418 07       		.byte	0x7
 1010 0419 2B       		.byte	0x2b
 1011 041a 12       		.uleb128 0x12
 1012 041b 34020000 		.4byte	.LASF38
 1013 041f 34020000 		.4byte	.LASF38
 1014 0423 08       		.byte	0x8
 1015 0424 5B       		.byte	0x5b
 1016 0425 12       		.uleb128 0x12
 1017 0426 98030000 		.4byte	.LASF39
 1018 042a 98030000 		.4byte	.LASF39
 1019 042e 09       		.byte	0x9
 1020 042f 5A       		.byte	0x5a
 1021 0430 12       		.uleb128 0x12
 1022 0431 67030000 		.4byte	.LASF40
 1023 0435 67030000 		.4byte	.LASF40
 1024 0439 0A       		.byte	0xa
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 24


 1025 043a 1E       		.byte	0x1e
 1026 043b 12       		.uleb128 0x12
 1027 043c 27030000 		.4byte	.LASF41
 1028 0440 27030000 		.4byte	.LASF41
 1029 0444 0B       		.byte	0xb
 1030 0445 4E       		.byte	0x4e
 1031 0446 12       		.uleb128 0x12
 1032 0447 B4010000 		.4byte	.LASF42
 1033 044b B4010000 		.4byte	.LASF42
 1034 044f 0C       		.byte	0xc
 1035 0450 55       		.byte	0x55
 1036 0451 12       		.uleb128 0x12
 1037 0452 00000000 		.4byte	.LASF43
 1038 0456 00000000 		.4byte	.LASF43
 1039 045a 0D       		.byte	0xd
 1040 045b 51       		.byte	0x51
 1041 045c 12       		.uleb128 0x12
 1042 045d 84020000 		.4byte	.LASF44
 1043 0461 84020000 		.4byte	.LASF44
 1044 0465 0E       		.byte	0xe
 1045 0466 26       		.byte	0x26
 1046 0467 12       		.uleb128 0x12
 1047 0468 25000000 		.4byte	.LASF45
 1048 046c 25000000 		.4byte	.LASF45
 1049 0470 0C       		.byte	0xc
 1050 0471 54       		.byte	0x54
 1051 0472 12       		.uleb128 0x12
 1052 0473 46000000 		.4byte	.LASF46
 1053 0477 46000000 		.4byte	.LASF46
 1054 047b 0B       		.byte	0xb
 1055 047c 4D       		.byte	0x4d
 1056 047d 12       		.uleb128 0x12
 1057 047e D8000000 		.4byte	.LASF47
 1058 0482 D8000000 		.4byte	.LASF47
 1059 0486 0A       		.byte	0xa
 1060 0487 14       		.byte	0x14
 1061 0488 12       		.uleb128 0x12
 1062 0489 E5000000 		.4byte	.LASF48
 1063 048d E5000000 		.4byte	.LASF48
 1064 0491 09       		.byte	0x9
 1065 0492 5B       		.byte	0x5b
 1066 0493 12       		.uleb128 0x12
 1067 0494 A1010000 		.4byte	.LASF49
 1068 0498 A1010000 		.4byte	.LASF49
 1069 049c 08       		.byte	0x8
 1070 049d 5A       		.byte	0x5a
 1071 049e 12       		.uleb128 0x12
 1072 049f EF020000 		.4byte	.LASF50
 1073 04a3 EF020000 		.4byte	.LASF50
 1074 04a7 0D       		.byte	0xd
 1075 04a8 6A       		.byte	0x6a
 1076 04a9 12       		.uleb128 0x12
 1077 04aa 70040000 		.4byte	.LASF51
 1078 04ae 70040000 		.4byte	.LASF51
 1079 04b2 08       		.byte	0x8
 1080 04b3 5E       		.byte	0x5e
 1081 04b4 12       		.uleb128 0x12
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 25


 1082 04b5 45030000 		.4byte	.LASF52
 1083 04b9 45030000 		.4byte	.LASF52
 1084 04bd 09       		.byte	0x9
 1085 04be 5E       		.byte	0x5e
 1086 04bf 12       		.uleb128 0x12
 1087 04c0 04020000 		.4byte	.LASF53
 1088 04c4 04020000 		.4byte	.LASF53
 1089 04c8 0E       		.byte	0xe
 1090 04c9 29       		.byte	0x29
 1091 04ca 12       		.uleb128 0x12
 1092 04cb BE000000 		.4byte	.LASF54
 1093 04cf BE000000 		.4byte	.LASF54
 1094 04d3 0F       		.byte	0xf
 1095 04d4 56       		.byte	0x56
 1096 04d5 12       		.uleb128 0x12
 1097 04d6 16020000 		.4byte	.LASF55
 1098 04da 16020000 		.4byte	.LASF55
 1099 04de 10       		.byte	0x10
 1100 04df 26       		.byte	0x26
 1101 04e0 12       		.uleb128 0x12
 1102 04e1 E3010000 		.4byte	.LASF56
 1103 04e5 E3010000 		.4byte	.LASF56
 1104 04e9 11       		.byte	0x11
 1105 04ea 2B       		.byte	0x2b
 1106 04eb 12       		.uleb128 0x12
 1107 04ec C4020000 		.4byte	.LASF57
 1108 04f0 C4020000 		.4byte	.LASF57
 1109 04f4 11       		.byte	0x11
 1110 04f5 29       		.byte	0x29
 1111 04f6 00       		.byte	0
 1112              		.section	.debug_abbrev,"",%progbits
 1113              	.Ldebug_abbrev0:
 1114 0000 01       		.uleb128 0x1
 1115 0001 11       		.uleb128 0x11
 1116 0002 01       		.byte	0x1
 1117 0003 25       		.uleb128 0x25
 1118 0004 0E       		.uleb128 0xe
 1119 0005 13       		.uleb128 0x13
 1120 0006 0B       		.uleb128 0xb
 1121 0007 03       		.uleb128 0x3
 1122 0008 0E       		.uleb128 0xe
 1123 0009 1B       		.uleb128 0x1b
 1124 000a 0E       		.uleb128 0xe
 1125 000b 55       		.uleb128 0x55
 1126 000c 17       		.uleb128 0x17
 1127 000d 11       		.uleb128 0x11
 1128 000e 01       		.uleb128 0x1
 1129 000f 10       		.uleb128 0x10
 1130 0010 17       		.uleb128 0x17
 1131 0011 00       		.byte	0
 1132 0012 00       		.byte	0
 1133 0013 02       		.uleb128 0x2
 1134 0014 24       		.uleb128 0x24
 1135 0015 00       		.byte	0
 1136 0016 0B       		.uleb128 0xb
 1137 0017 0B       		.uleb128 0xb
 1138 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 26


 1139 0019 0B       		.uleb128 0xb
 1140 001a 03       		.uleb128 0x3
 1141 001b 0E       		.uleb128 0xe
 1142 001c 00       		.byte	0
 1143 001d 00       		.byte	0
 1144 001e 03       		.uleb128 0x3
 1145 001f 16       		.uleb128 0x16
 1146 0020 00       		.byte	0
 1147 0021 03       		.uleb128 0x3
 1148 0022 0E       		.uleb128 0xe
 1149 0023 3A       		.uleb128 0x3a
 1150 0024 0B       		.uleb128 0xb
 1151 0025 3B       		.uleb128 0x3b
 1152 0026 0B       		.uleb128 0xb
 1153 0027 49       		.uleb128 0x49
 1154 0028 13       		.uleb128 0x13
 1155 0029 00       		.byte	0
 1156 002a 00       		.byte	0
 1157 002b 04       		.uleb128 0x4
 1158 002c 24       		.uleb128 0x24
 1159 002d 00       		.byte	0
 1160 002e 0B       		.uleb128 0xb
 1161 002f 0B       		.uleb128 0xb
 1162 0030 3E       		.uleb128 0x3e
 1163 0031 0B       		.uleb128 0xb
 1164 0032 03       		.uleb128 0x3
 1165 0033 08       		.uleb128 0x8
 1166 0034 00       		.byte	0
 1167 0035 00       		.byte	0
 1168 0036 05       		.uleb128 0x5
 1169 0037 16       		.uleb128 0x16
 1170 0038 00       		.byte	0
 1171 0039 03       		.uleb128 0x3
 1172 003a 0E       		.uleb128 0xe
 1173 003b 3A       		.uleb128 0x3a
 1174 003c 0B       		.uleb128 0xb
 1175 003d 3B       		.uleb128 0x3b
 1176 003e 05       		.uleb128 0x5
 1177 003f 49       		.uleb128 0x49
 1178 0040 13       		.uleb128 0x13
 1179 0041 00       		.byte	0
 1180 0042 00       		.byte	0
 1181 0043 06       		.uleb128 0x6
 1182 0044 35       		.uleb128 0x35
 1183 0045 00       		.byte	0
 1184 0046 49       		.uleb128 0x49
 1185 0047 13       		.uleb128 0x13
 1186 0048 00       		.byte	0
 1187 0049 00       		.byte	0
 1188 004a 07       		.uleb128 0x7
 1189 004b 2E       		.uleb128 0x2e
 1190 004c 01       		.byte	0x1
 1191 004d 3F       		.uleb128 0x3f
 1192 004e 19       		.uleb128 0x19
 1193 004f 03       		.uleb128 0x3
 1194 0050 0E       		.uleb128 0xe
 1195 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 27


 1196 0052 0B       		.uleb128 0xb
 1197 0053 3B       		.uleb128 0x3b
 1198 0054 0B       		.uleb128 0xb
 1199 0055 27       		.uleb128 0x27
 1200 0056 19       		.uleb128 0x19
 1201 0057 11       		.uleb128 0x11
 1202 0058 01       		.uleb128 0x1
 1203 0059 12       		.uleb128 0x12
 1204 005a 06       		.uleb128 0x6
 1205 005b 40       		.uleb128 0x40
 1206 005c 18       		.uleb128 0x18
 1207 005d 9742     		.uleb128 0x2117
 1208 005f 19       		.uleb128 0x19
 1209 0060 01       		.uleb128 0x1
 1210 0061 13       		.uleb128 0x13
 1211 0062 00       		.byte	0
 1212 0063 00       		.byte	0
 1213 0064 08       		.uleb128 0x8
 1214 0065 898201   		.uleb128 0x4109
 1215 0068 00       		.byte	0
 1216 0069 11       		.uleb128 0x11
 1217 006a 01       		.uleb128 0x1
 1218 006b 31       		.uleb128 0x31
 1219 006c 13       		.uleb128 0x13
 1220 006d 00       		.byte	0
 1221 006e 00       		.byte	0
 1222 006f 09       		.uleb128 0x9
 1223 0070 898201   		.uleb128 0x4109
 1224 0073 01       		.byte	0x1
 1225 0074 11       		.uleb128 0x11
 1226 0075 01       		.uleb128 0x1
 1227 0076 31       		.uleb128 0x31
 1228 0077 13       		.uleb128 0x13
 1229 0078 01       		.uleb128 0x1
 1230 0079 13       		.uleb128 0x13
 1231 007a 00       		.byte	0
 1232 007b 00       		.byte	0
 1233 007c 0A       		.uleb128 0xa
 1234 007d 8A8201   		.uleb128 0x410a
 1235 0080 00       		.byte	0
 1236 0081 02       		.uleb128 0x2
 1237 0082 18       		.uleb128 0x18
 1238 0083 9142     		.uleb128 0x2111
 1239 0085 18       		.uleb128 0x18
 1240 0086 00       		.byte	0
 1241 0087 00       		.byte	0
 1242 0088 0B       		.uleb128 0xb
 1243 0089 898201   		.uleb128 0x4109
 1244 008c 01       		.byte	0x1
 1245 008d 11       		.uleb128 0x11
 1246 008e 01       		.uleb128 0x1
 1247 008f 31       		.uleb128 0x31
 1248 0090 13       		.uleb128 0x13
 1249 0091 00       		.byte	0
 1250 0092 00       		.byte	0
 1251 0093 0C       		.uleb128 0xc
 1252 0094 2E       		.uleb128 0x2e
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 28


 1253 0095 01       		.byte	0x1
 1254 0096 3F       		.uleb128 0x3f
 1255 0097 19       		.uleb128 0x19
 1256 0098 03       		.uleb128 0x3
 1257 0099 0E       		.uleb128 0xe
 1258 009a 3A       		.uleb128 0x3a
 1259 009b 0B       		.uleb128 0xb
 1260 009c 3B       		.uleb128 0x3b
 1261 009d 05       		.uleb128 0x5
 1262 009e 27       		.uleb128 0x27
 1263 009f 19       		.uleb128 0x19
 1264 00a0 11       		.uleb128 0x11
 1265 00a1 01       		.uleb128 0x1
 1266 00a2 12       		.uleb128 0x12
 1267 00a3 06       		.uleb128 0x6
 1268 00a4 40       		.uleb128 0x40
 1269 00a5 18       		.uleb128 0x18
 1270 00a6 9742     		.uleb128 0x2117
 1271 00a8 19       		.uleb128 0x19
 1272 00a9 01       		.uleb128 0x1
 1273 00aa 13       		.uleb128 0x13
 1274 00ab 00       		.byte	0
 1275 00ac 00       		.byte	0
 1276 00ad 0D       		.uleb128 0xd
 1277 00ae 34       		.uleb128 0x34
 1278 00af 00       		.byte	0
 1279 00b0 03       		.uleb128 0x3
 1280 00b1 0E       		.uleb128 0xe
 1281 00b2 3A       		.uleb128 0x3a
 1282 00b3 0B       		.uleb128 0xb
 1283 00b4 3B       		.uleb128 0x3b
 1284 00b5 05       		.uleb128 0x5
 1285 00b6 49       		.uleb128 0x49
 1286 00b7 13       		.uleb128 0x13
 1287 00b8 3F       		.uleb128 0x3f
 1288 00b9 19       		.uleb128 0x19
 1289 00ba 3C       		.uleb128 0x3c
 1290 00bb 19       		.uleb128 0x19
 1291 00bc 00       		.byte	0
 1292 00bd 00       		.byte	0
 1293 00be 0E       		.uleb128 0xe
 1294 00bf 34       		.uleb128 0x34
 1295 00c0 00       		.byte	0
 1296 00c1 03       		.uleb128 0x3
 1297 00c2 0E       		.uleb128 0xe
 1298 00c3 3A       		.uleb128 0x3a
 1299 00c4 0B       		.uleb128 0xb
 1300 00c5 3B       		.uleb128 0x3b
 1301 00c6 0B       		.uleb128 0xb
 1302 00c7 49       		.uleb128 0x49
 1303 00c8 13       		.uleb128 0x13
 1304 00c9 3F       		.uleb128 0x3f
 1305 00ca 19       		.uleb128 0x19
 1306 00cb 02       		.uleb128 0x2
 1307 00cc 18       		.uleb128 0x18
 1308 00cd 00       		.byte	0
 1309 00ce 00       		.byte	0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 29


 1310 00cf 0F       		.uleb128 0xf
 1311 00d0 01       		.uleb128 0x1
 1312 00d1 01       		.byte	0x1
 1313 00d2 49       		.uleb128 0x49
 1314 00d3 13       		.uleb128 0x13
 1315 00d4 01       		.uleb128 0x1
 1316 00d5 13       		.uleb128 0x13
 1317 00d6 00       		.byte	0
 1318 00d7 00       		.byte	0
 1319 00d8 10       		.uleb128 0x10
 1320 00d9 21       		.uleb128 0x21
 1321 00da 00       		.byte	0
 1322 00db 49       		.uleb128 0x49
 1323 00dc 13       		.uleb128 0x13
 1324 00dd 2F       		.uleb128 0x2f
 1325 00de 0B       		.uleb128 0xb
 1326 00df 00       		.byte	0
 1327 00e0 00       		.byte	0
 1328 00e1 11       		.uleb128 0x11
 1329 00e2 34       		.uleb128 0x34
 1330 00e3 00       		.byte	0
 1331 00e4 03       		.uleb128 0x3
 1332 00e5 08       		.uleb128 0x8
 1333 00e6 3A       		.uleb128 0x3a
 1334 00e7 0B       		.uleb128 0xb
 1335 00e8 3B       		.uleb128 0x3b
 1336 00e9 0B       		.uleb128 0xb
 1337 00ea 49       		.uleb128 0x49
 1338 00eb 13       		.uleb128 0x13
 1339 00ec 3F       		.uleb128 0x3f
 1340 00ed 19       		.uleb128 0x19
 1341 00ee 02       		.uleb128 0x2
 1342 00ef 18       		.uleb128 0x18
 1343 00f0 00       		.byte	0
 1344 00f1 00       		.byte	0
 1345 00f2 12       		.uleb128 0x12
 1346 00f3 2E       		.uleb128 0x2e
 1347 00f4 00       		.byte	0
 1348 00f5 3F       		.uleb128 0x3f
 1349 00f6 19       		.uleb128 0x19
 1350 00f7 3C       		.uleb128 0x3c
 1351 00f8 19       		.uleb128 0x19
 1352 00f9 6E       		.uleb128 0x6e
 1353 00fa 0E       		.uleb128 0xe
 1354 00fb 03       		.uleb128 0x3
 1355 00fc 0E       		.uleb128 0xe
 1356 00fd 3A       		.uleb128 0x3a
 1357 00fe 0B       		.uleb128 0xb
 1358 00ff 3B       		.uleb128 0x3b
 1359 0100 0B       		.uleb128 0xb
 1360 0101 00       		.byte	0
 1361 0102 00       		.byte	0
 1362 0103 00       		.byte	0
 1363              		.section	.debug_aranges,"",%progbits
 1364 0000 44000000 		.4byte	0x44
 1365 0004 0200     		.2byte	0x2
 1366 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 30


 1367 000a 04       		.byte	0x4
 1368 000b 00       		.byte	0
 1369 000c 0000     		.2byte	0
 1370 000e 0000     		.2byte	0
 1371 0010 00000000 		.4byte	.LFB64
 1372 0014 14000000 		.4byte	.LFE64-.LFB64
 1373 0018 00000000 		.4byte	.LFB65
 1374 001c 18000000 		.4byte	.LFE65-.LFB65
 1375 0020 00000000 		.4byte	.LFB66
 1376 0024 30010000 		.4byte	.LFE66-.LFB66
 1377 0028 00000000 		.4byte	.LFB67
 1378 002c 14000000 		.4byte	.LFE67-.LFB67
 1379 0030 00000000 		.4byte	.LFB68
 1380 0034 80000000 		.4byte	.LFE68-.LFB68
 1381 0038 00000000 		.4byte	.LFB69
 1382 003c 14000000 		.4byte	.LFE69-.LFB69
 1383 0040 00000000 		.4byte	0
 1384 0044 00000000 		.4byte	0
 1385              		.section	.debug_ranges,"",%progbits
 1386              	.Ldebug_ranges0:
 1387 0000 00000000 		.4byte	.LFB64
 1388 0004 14000000 		.4byte	.LFE64
 1389 0008 00000000 		.4byte	.LFB65
 1390 000c 18000000 		.4byte	.LFE65
 1391 0010 00000000 		.4byte	.LFB66
 1392 0014 30010000 		.4byte	.LFE66
 1393 0018 00000000 		.4byte	.LFB67
 1394 001c 14000000 		.4byte	.LFE67
 1395 0020 00000000 		.4byte	.LFB68
 1396 0024 80000000 		.4byte	.LFE68
 1397 0028 00000000 		.4byte	.LFB69
 1398 002c 14000000 		.4byte	.LFE69
 1399 0030 00000000 		.4byte	0
 1400 0034 00000000 		.4byte	0
 1401              		.section	.debug_line,"",%progbits
 1402              	.Ldebug_line0:
 1403 0000 F8020000 		.section	.debug_str,"MS",%progbits,1
 1403      02003002 
 1403      00000201 
 1403      FB0E0D00 
 1403      01010101 
 1404              	.LASF43:
 1405 0000 45455052 		.ascii	"EEPROM_writeByte\000"
 1405      4F4D5F77 
 1405      72697465 
 1405      42797465 
 1405      00
 1406              	.LASF24:
 1407 0011 43757374 		.ascii	"Custom_LED_Blinking\000"
 1407      6F6D5F4C 
 1407      45445F42 
 1407      6C696E6B 
 1407      696E6700 
 1408              	.LASF45:
 1409 0025 55415254 		.ascii	"UART_1_Start\000"
 1409      5F315F53 
 1409      74617274 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 31


 1409      00
 1410              	.LASF4:
 1411 0032 5F5F7569 		.ascii	"__uint8_t\000"
 1411      6E74385F 
 1411      7400
 1412              	.LASF34:
 1413 003c 54696D65 		.ascii	"TimerFlag\000"
 1413      72466C61 
 1413      6700
 1414              	.LASF46:
 1415 0046 5350494D 		.ascii	"SPIM_1_Start\000"
 1415      5F315F53 
 1415      74617274 
 1415      00
 1416              	.LASF5:
 1417 0053 5F5F696E 		.ascii	"__int32_t\000"
 1417      7433325F 
 1417      7400
 1418              	.LASF33:
 1419 005d 636F6E66 		.ascii	"configuration_status\000"
 1419      69677572 
 1419      6174696F 
 1419      6E5F7374 
 1419      61747573 
 1420              	.LASF3:
 1421 0072 73686F72 		.ascii	"short unsigned int\000"
 1421      7420756E 
 1421      7369676E 
 1421      65642069 
 1421      6E7400
 1422              	.LASF37:
 1423 0085 50696E5F 		.ascii	"Pin_ISR_ClearInterrupt\000"
 1423      4953525F 
 1423      436C6561 
 1423      72496E74 
 1423      65727275 
 1424              	.LASF16:
 1425 009c 646F7562 		.ascii	"double\000"
 1425      6C6500
 1426              	.LASF22:
 1427 00a3 43757374 		.ascii	"Custom_Pin_Button_Positive\000"
 1427      6F6D5F50 
 1427      696E5F42 
 1427      7574746F 
 1427      6E5F506F 
 1428              	.LASF54:
 1429 00be 4144435F 		.ascii	"ADC_DelSig_Read32\000"
 1429      44656C53 
 1429      69675F52 
 1429      65616433 
 1429      3200
 1430              	.LASF12:
 1431 00d0 696E7433 		.ascii	"int32_t\000"
 1431      325F7400 
 1432              	.LASF47:
 1433 00d8 5247424C 		.ascii	"RGBLed_Start\000"
 1433      65645F53 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 32


 1433      74617274 
 1433      00
 1434              	.LASF48:
 1435 00e5 54696D65 		.ascii	"Timer_Blinking_Stop\000"
 1435      725F426C 
 1435      696E6B69 
 1435      6E675F53 
 1435      746F7000 
 1436              	.LASF15:
 1437 00f9 666C6F61 		.ascii	"float\000"
 1437      7400
 1438              	.LASF13:
 1439 00ff 75696E74 		.ascii	"uint8\000"
 1439      3800
 1440              	.LASF1:
 1441 0105 756E7369 		.ascii	"unsigned char\000"
 1441      676E6564 
 1441      20636861 
 1441      7200
 1442              	.LASF58:
 1443 0113 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1443      43313120 
 1443      352E342E 
 1443      31203230 
 1443      31363036 
 1444 0146 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1444      20726576 
 1444      6973696F 
 1444      6E203233 
 1444      37373135 
 1445 0179 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1445      66756E63 
 1445      74696F6E 
 1445      2D736563 
 1445      74696F6E 
 1446              	.LASF49:
 1447 01a1 54494D45 		.ascii	"TIMER_button_Start\000"
 1447      525F6275 
 1447      74746F6E 
 1447      5F537461 
 1447      727400
 1448              	.LASF42:
 1449 01b4 55415254 		.ascii	"UART_1_Stop\000"
 1449      5F315F53 
 1449      746F7000 
 1450              	.LASF7:
 1451 01c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1451      20756E73 
 1451      69676E65 
 1451      6420696E 
 1451      7400
 1452              	.LASF29:
 1453 01d2 64617461 		.ascii	"data_water\000"
 1453      5F776174 
 1453      657200
 1454              	.LASF14:
 1455 01dd 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 33


 1455      3200
 1456              	.LASF56:
 1457 01e3 50696E5F 		.ascii	"Pin_EnableDisable_ClearInterrupt\000"
 1457      456E6162 
 1457      6C654469 
 1457      7361626C 
 1457      655F436C 
 1458              	.LASF53:
 1459 0204 50696E5F 		.ascii	"Pin_Led_Blue_Read\000"
 1459      4C65645F 
 1459      426C7565 
 1459      5F526561 
 1459      6400
 1460              	.LASF55:
 1461 0216 50696E5F 		.ascii	"Pin_RED_UARTVerboseFlag_Write\000"
 1461      5245445F 
 1461      55415254 
 1461      56657262 
 1461      6F736546 
 1462              	.LASF38:
 1463 0234 54494D45 		.ascii	"TIMER_button_Stop\000"
 1463      525F6275 
 1463      74746F6E 
 1463      5F53746F 
 1463      7000
 1464              	.LASF2:
 1465 0246 73686F72 		.ascii	"short int\000"
 1465      7420696E 
 1465      7400
 1466              	.LASF26:
 1467 0250 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1467      52784275 
 1467      66666572 
 1467      00
 1468              	.LASF35:
 1469 025d 76616C75 		.ascii	"value_POT\000"
 1469      655F504F 
 1469      5400
 1470              	.LASF28:
 1471 0267 55415254 		.ascii	"UARTVerboseFlag\000"
 1471      56657262 
 1471      6F736546 
 1471      6C616700 
 1472              	.LASF10:
 1473 0277 756E7369 		.ascii	"unsigned int\000"
 1473      676E6564 
 1473      20696E74 
 1473      00
 1474              	.LASF44:
 1475 0284 50696E5F 		.ascii	"Pin_Led_Blue_Write\000"
 1475      4C65645F 
 1475      426C7565 
 1475      5F577269 
 1475      746500
 1476              	.LASF9:
 1477 0297 6C6F6E67 		.ascii	"long long unsigned int\000"
 1477      206C6F6E 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 34


 1477      6720756E 
 1477      7369676E 
 1477      65642069 
 1478              	.LASF11:
 1479 02ae 75696E74 		.ascii	"uint8_t\000"
 1479      385F7400 
 1480              	.LASF32:
 1481 02b6 73797374 		.ascii	"system_status\000"
 1481      656D5F73 
 1481      74617475 
 1481      7300
 1482              	.LASF57:
 1483 02c4 50696E5F 		.ascii	"Pin_EnableDisable_Read\000"
 1483      456E6162 
 1483      6C654469 
 1483      7361626C 
 1483      655F5265 
 1484              	.LASF23:
 1485 02db 43757374 		.ascii	"Custom_Timer_Button\000"
 1485      6F6D5F54 
 1485      696D6572 
 1485      5F427574 
 1485      746F6E00 
 1486              	.LASF50:
 1487 02ef 45455052 		.ascii	"EEPROM_waitForWriteComplete\000"
 1487      4F4D5F77 
 1487      61697446 
 1487      6F725772 
 1487      69746543 
 1488              	.LASF19:
 1489 030b 73697A65 		.ascii	"sizetype\000"
 1489      74797065 
 1489      00
 1490              	.LASF8:
 1491 0314 6C6F6E67 		.ascii	"long long int\000"
 1491      206C6F6E 
 1491      6720696E 
 1491      7400
 1492              	.LASF17:
 1493 0322 63686172 		.ascii	"char\000"
 1493      00
 1494              	.LASF41:
 1495 0327 5350494D 		.ascii	"SPIM_1_Stop\000"
 1495      5F315F53 
 1495      746F7000 
 1496              	.LASF30:
 1497 0333 466C6167 		.ascii	"FlagEnableDisable\000"
 1497      456E6162 
 1497      6C654469 
 1497      7361626C 
 1497      6500
 1498              	.LASF52:
 1499 0345 54696D65 		.ascii	"Timer_Blinking_ReadStatusRegister\000"
 1499      725F426C 
 1499      696E6B69 
 1499      6E675F52 
 1499      65616453 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 35


 1500              	.LASF40:
 1501 0367 5247424C 		.ascii	"RGBLed_WriteColor\000"
 1501      65645F57 
 1501      72697465 
 1501      436F6C6F 
 1501      7200
 1502              	.LASF27:
 1503 0379 5061636B 		.ascii	"PacketReadyFlag\000"
 1503      65745265 
 1503      61647946 
 1503      6C616700 
 1504              	.LASF20:
 1505 0389 43757374 		.ascii	"Custom_Pin_ISR\000"
 1505      6F6D5F50 
 1505      696E5F49 
 1505      535200
 1506              	.LASF39:
 1507 0398 54696D65 		.ascii	"Timer_Blinking_Start\000"
 1507      725F426C 
 1507      696E6B69 
 1507      6E675F53 
 1507      74617274 
 1508              	.LASF21:
 1509 03ad 43757374 		.ascii	"Custom_Pin_Button\000"
 1509      6F6D5F50 
 1509      696E5F42 
 1509      7574746F 
 1509      6E00
 1510              	.LASF60:
 1511 03bf 433A5C55 		.ascii	"C:\\Users\\noemi\\Desktop\\university\\university\\"
 1511      73657273 
 1511      5C6E6F65 
 1511      6D695C44 
 1511      65736B74 
 1512 03ec 706F6C69 		.ascii	"poli\\lab sensors\\final assignment\\Final-Assignme"
 1512      5C6C6162 
 1512      2073656E 
 1512      736F7273 
 1512      5C66696E 
 1513 041c 6E742D50 		.ascii	"nt-PSoC\\Final_Assignment\\Final_assignment_01.cyds"
 1513      536F435C 
 1513      46696E61 
 1513      6C5F4173 
 1513      7369676E 
 1514 044d 6E00     		.ascii	"n\000"
 1515              	.LASF6:
 1516 044f 6C6F6E67 		.ascii	"long int\000"
 1516      20696E74 
 1516      00
 1517              	.LASF18:
 1518 0458 6C6F6E67 		.ascii	"long double\000"
 1518      20646F75 
 1518      626C6500 
 1519              	.LASF0:
 1520 0464 7369676E 		.ascii	"signed char\000"
 1520      65642063 
 1520      68617200 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccvrS35A.s 			page 36


 1521              	.LASF51:
 1522 0470 54494D45 		.ascii	"TIMER_button_ReadStatusRegister\000"
 1522      525F6275 
 1522      74746F6E 
 1522      5F526561 
 1522      64537461 
 1523              	.LASF25:
 1524 0490 43757374 		.ascii	"Custom_Pin_EnableDisable\000"
 1524      6F6D5F50 
 1524      696E5F45 
 1524      6E61626C 
 1524      65446973 
 1525              	.LASF36:
 1526 04a9 64617461 		.ascii	"data_register\000"
 1526      5F726567 
 1526      69737465 
 1526      7200
 1527              	.LASF31:
 1528 04b7 62756666 		.ascii	"bufferUART\000"
 1528      65725541 
 1528      525400
 1529              	.LASF59:
 1530 04c2 496E7465 		.ascii	"InterruptRoutines.c\000"
 1530      72727570 
 1530      74526F75 
 1530      74696E65 
 1530      732E6300 
 1531              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
