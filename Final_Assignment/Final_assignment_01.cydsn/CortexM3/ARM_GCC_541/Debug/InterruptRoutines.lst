ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"InterruptRoutines.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Custom_Pin_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	Custom_Pin_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	Custom_Pin_ISR, %function
  25              	Custom_Pin_ISR:
  26              	.LFB64:
  27              		.file 1 "InterruptRoutines.c"
   1:InterruptRoutines.c **** /* ========================================
   2:InterruptRoutines.c ****  *
   3:InterruptRoutines.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:InterruptRoutines.c ****  * All Rights Reserved
   5:InterruptRoutines.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:InterruptRoutines.c ****  *
   7:InterruptRoutines.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:InterruptRoutines.c ****  * WHICH IS THE PROPERTY OF your company.
   9:InterruptRoutines.c ****  *
  10:InterruptRoutines.c ****  * ========================================
  11:InterruptRoutines.c **** */
  12:InterruptRoutines.c **** #include "InterruptRoutines.h"
  13:InterruptRoutines.c **** #include "RGBLedDriver.h"
  14:InterruptRoutines.c **** #define DATA_BYTES 6
  15:InterruptRoutines.c **** 
  16:InterruptRoutines.c **** #define empty_bit 0x20
  17:InterruptRoutines.c **** 
  18:InterruptRoutines.c **** char bufferUART[100];
  19:InterruptRoutines.c **** #define UART_1_PutBuffer UART_1_PutString(bufferUART)
  20:InterruptRoutines.c **** #include <stdio.h>
  21:InterruptRoutines.c **** #include <string.h>
  22:InterruptRoutines.c **** 
  23:InterruptRoutines.c **** #define OFF 0
  24:InterruptRoutines.c **** #define ON 1
  25:InterruptRoutines.c **** #define TIME_FACTOR 6
  26:InterruptRoutines.c **** 
  27:InterruptRoutines.c **** uint8_t system_status=OFF;
  28:InterruptRoutines.c **** uint8_t configuration_status=OFF;
  29:InterruptRoutines.c **** uint8 TimerFlag=0; 
  30:InterruptRoutines.c **** 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 2


  31:InterruptRoutines.c **** uint8_t i=0;
  32:InterruptRoutines.c **** 
  33:InterruptRoutines.c **** CY_ISR(Custom_Pin_ISR){
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  34:InterruptRoutines.c ****     
  35:InterruptRoutines.c ****     
  36:InterruptRoutines.c **** 
  37:InterruptRoutines.c ****     
  38:InterruptRoutines.c ****     PacketReadyFlag=1;
  36              		.loc 1 38 0
  37 0002 0122     		movs	r2, #1
  38 0004 024B     		ldr	r3, .L3
  39 0006 1A70     		strb	r2, [r3]
  39:InterruptRoutines.c **** //    uint8_t data = LIS3DH_readByte(LIS3DH_INT1_SRC);
  40:InterruptRoutines.c **** //    sprintf(bufferUART, "INT1_SRC 0x%02X\r\n", data);
  41:InterruptRoutines.c **** //        UART_1_PutBuffer;
  42:InterruptRoutines.c **** //    data = LIS3DH_readByte(LIS3DH_FIFO_SRC_REG);
  43:InterruptRoutines.c **** //    sprintf(bufferUART, "FIFO_SRC 0x%02X\r\n", data);
  44:InterruptRoutines.c **** //        UART_1_PutBuffer;
  45:InterruptRoutines.c **** //    
  46:InterruptRoutines.c **** //    LIS3DH_writeByte(LIS3DH_FIFO_CTRL_REG,0x00);
  47:InterruptRoutines.c **** //    LIS3DH_writeByte(LIS3DH_FIFO_CTRL_REG,0x47);
  48:InterruptRoutines.c ****     
  49:InterruptRoutines.c **** //        if (data_read&0x1E){
  50:InterruptRoutines.c **** //            PacketReadyFlag=1;  
  51:InterruptRoutines.c **** //        }
  52:InterruptRoutines.c **** //        else{
  53:InterruptRoutines.c **** //            PacketReadyFlag=2;
  54:InterruptRoutines.c **** //        }
  55:InterruptRoutines.c ****         
  56:InterruptRoutines.c **** //        else{
  57:InterruptRoutines.c **** //            PacketReadyFlag = 2;
  58:InterruptRoutines.c **** //        }
  59:InterruptRoutines.c ****   
  60:InterruptRoutines.c ****     //uint8_t clear=LIS3DH_readByte(LIS3DH_INT1_SRC); //clear interrupt register
  61:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  62:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  63:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  64:InterruptRoutines.c **** //    
  65:InterruptRoutines.c ****     Pin_ISR_ClearInterrupt();
  40              		.loc 1 65 0
  41 0008 FFF7FEFF 		bl	Pin_ISR_ClearInterrupt
  42              	.LVL0:
  43 000c 08BD     		pop	{r3, pc}
  44              	.L4:
  45 000e 00BF     		.align	2
  46              	.L3:
  47 0010 00000000 		.word	PacketReadyFlag
  48              		.cfi_endproc
  49              	.LFE64:
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 3


  50              		.size	Custom_Pin_ISR, .-Custom_Pin_ISR
  51              		.section	.text.Custom_Pin_Button,"ax",%progbits
  52              		.align	2
  53              		.global	Custom_Pin_Button
  54              		.thumb
  55              		.thumb_func
  56              		.type	Custom_Pin_Button, %function
  57              	Custom_Pin_Button:
  58              	.LFB65:
  66:InterruptRoutines.c ****     
  67:InterruptRoutines.c ****     //uint8_t value=LIS3DH_readByte(LIS3DH_FIFO_SRC_REG);
  68:InterruptRoutines.c **** //    while (!(value&empty_bit)){
  69:InterruptRoutines.c **** //    LIS3DH_readPage(LIS3DH_OUT_X_L, (uint8_t*) AccData, DATA_BYTES);
  70:InterruptRoutines.c **** //}
  71:InterruptRoutines.c ****     
  72:InterruptRoutines.c **** }
  73:InterruptRoutines.c **** 
  74:InterruptRoutines.c **** CY_ISR(Custom_Pin_Button){
  59              		.loc 1 74 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63 0000 08B5     		push	{r3, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 3, -8
  66              		.cfi_offset 14, -4
  75:InterruptRoutines.c ****     
  76:InterruptRoutines.c ****     /*      NEGATIVE EDGE OF THE DEBOUNCED BUTTON -->CLICKED
  77:InterruptRoutines.c ****     STOP timer button. this timer is responsible of counting the time difference between two differ
  78:InterruptRoutines.c ****     I don't want that timer keeps counting if i'm pressing (i don't consided that as time INTER cli
  79:InterruptRoutines.c ****     */
  80:InterruptRoutines.c ****     
  81:InterruptRoutines.c ****     TIMER_button_Stop();
  67              		.loc 1 81 0
  68 0002 FFF7FEFF 		bl	TIMER_button_Stop
  69              	.LVL1:
  82:InterruptRoutines.c ****     
  83:InterruptRoutines.c ****     /*
  84:InterruptRoutines.c ****     index i is increased with a timer (overflow 250 ms) that is used for counting the time between
  85:InterruptRoutines.c ****     negative edge and positive edge --> duration of pressing. everytime a negative edge is detected
  86:InterruptRoutines.c ****     */
  87:InterruptRoutines.c ****     i=0;
  70              		.loc 1 87 0
  71 0006 0022     		movs	r2, #0
  72 0008 014B     		ldr	r3, .L7
  73 000a 1A70     		strb	r2, [r3]
  74 000c 08BD     		pop	{r3, pc}
  75              	.L8:
  76 000e 00BF     		.align	2
  77              	.L7:
  78 0010 00000000 		.word	.LANCHOR0
  79              		.cfi_endproc
  80              	.LFE65:
  81              		.size	Custom_Pin_Button, .-Custom_Pin_Button
  82              		.section	.text.Custom_Pin_Button_Positive,"ax",%progbits
  83              		.align	2
  84              		.global	Custom_Pin_Button_Positive
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 4


  85              		.thumb
  86              		.thumb_func
  87              		.type	Custom_Pin_Button_Positive, %function
  88              	Custom_Pin_Button_Positive:
  89              	.LFB66:
  88:InterruptRoutines.c ****  
  89:InterruptRoutines.c **** }
  90:InterruptRoutines.c **** 
  91:InterruptRoutines.c **** CY_ISR(Custom_Pin_Button_Positive){
  90              		.loc 1 91 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0000 38B5     		push	{r3, r4, r5, lr}
  95              		.cfi_def_cfa_offset 16
  96              		.cfi_offset 3, -16
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 5, -8
  99              		.cfi_offset 14, -4
  92:InterruptRoutines.c ****     
  93:InterruptRoutines.c ****     /*      POSITIVE EDGE OF THE DEBOUNCED BUTTON --> BUTTON RELEASED
  94:InterruptRoutines.c ****     when the button is released the first thing to be checked is the time intercurred 
  95:InterruptRoutines.c ****     between button pressed and button released.
  96:InterruptRoutines.c ****     since overflow is 250 ms, index=TIME FACTOR=6 means 1500 ms
  97:InterruptRoutines.c ****     if the time was higher than time factor : CONFIGURATION MODE
  98:InterruptRoutines.c ****     if the time was lower that time factor: check for double click options (START/STOP ACQUISITION)
  99:InterruptRoutines.c ****     */
 100:InterruptRoutines.c ****     
 101:InterruptRoutines.c ****     if (i>=TIME_FACTOR){
 100              		.loc 1 101 0
 101 0002 3E4B     		ldr	r3, .L21
 102 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103 0006 052B     		cmp	r3, #5
 104 0008 2DD9     		bls	.L10
 102:InterruptRoutines.c ****         
 103:InterruptRoutines.c ****         /*LONG PRESSURE: configuration mode. depending on the current configuration state
 104:InterruptRoutines.c ****         enter or exit configuration mode
 105:InterruptRoutines.c ****         */
 106:InterruptRoutines.c ****         if (configuration_status==OFF){
 105              		.loc 1 106 0
 106 000a 3C4B     		ldr	r3, .L21
 107 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 108 000e 73B9     		cbnz	r3, .L11
 107:InterruptRoutines.c ****             configuration_status=ON;
 109              		.loc 1 107 0
 110 0010 0122     		movs	r2, #1
 111 0012 3A4B     		ldr	r3, .L21
 112 0014 5A70     		strb	r2, [r3, #1]
 108:InterruptRoutines.c ****             RGBLed_WriteColor(OFF, OFF, OFF);
 113              		.loc 1 108 0
 114 0016 0022     		movs	r2, #0
 115 0018 1146     		mov	r1, r2
 116 001a 1046     		mov	r0, r2
 117 001c FFF7FEFF 		bl	RGBLed_WriteColor
 118              	.LVL2:
 109:InterruptRoutines.c ****             SPIM_1_Stop();
 119              		.loc 1 109 0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 5


 120 0020 FFF7FEFF 		bl	SPIM_1_Stop
 121              	.LVL3:
 110:InterruptRoutines.c ****             SPIM_2_Stop();
 122              		.loc 1 110 0
 123 0024 FFF7FEFF 		bl	SPIM_2_Stop
 124              	.LVL4:
 111:InterruptRoutines.c ****             UART_1_Stop();
 125              		.loc 1 111 0
 126 0028 FFF7FEFF 		bl	UART_1_Stop
 127              	.LVL5:
 128 002c 17E0     		b	.L12
 129              	.L11:
 112:InterruptRoutines.c ****         }
 113:InterruptRoutines.c ****         else if (configuration_status==ON){
 130              		.loc 1 113 0
 131 002e 012B     		cmp	r3, #1
 132 0030 15D1     		bne	.L12
 114:InterruptRoutines.c **** 
 115:InterruptRoutines.c ****             configuration_status=OFF;
 133              		.loc 1 115 0
 134 0032 324B     		ldr	r3, .L21
 135 0034 0022     		movs	r2, #0
 136 0036 5A70     		strb	r2, [r3, #1]
 116:InterruptRoutines.c ****             
 117:InterruptRoutines.c ****             /*
 118:InterruptRoutines.c ****             if the system is exiting the configuration mode, RETURN to the previous
 119:InterruptRoutines.c ****             system status.
 120:InterruptRoutines.c ****             i.e. I can enter configuration mode both from system ON and system OFF. then, when i de
 121:InterruptRoutines.c ****             close CONFIGURATION mode the system is going back to ON or OFF. 
 122:InterruptRoutines.c ****             */
 123:InterruptRoutines.c ****             
 124:InterruptRoutines.c ****             if (system_status==OFF){
 137              		.loc 1 124 0
 138 0038 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 139 003a 1BB9     		cbnz	r3, .L13
 125:InterruptRoutines.c ****                 Pin_Led_Blue_Write(OFF);
 140              		.loc 1 125 0
 141 003c 1046     		mov	r0, r2
 142 003e FFF7FEFF 		bl	Pin_Led_Blue_Write
 143              	.LVL6:
 144 0042 0CE0     		b	.L12
 145              	.L13:
 126:InterruptRoutines.c ****             }
 127:InterruptRoutines.c ****             else if (system_status==ON){
 146              		.loc 1 127 0
 147 0044 012B     		cmp	r3, #1
 148 0046 0AD1     		bne	.L12
 128:InterruptRoutines.c ****                 Pin_Led_Blue_Write(ON);
 149              		.loc 1 128 0
 150 0048 0120     		movs	r0, #1
 151 004a FFF7FEFF 		bl	Pin_Led_Blue_Write
 152              	.LVL7:
 129:InterruptRoutines.c ****                 
 130:InterruptRoutines.c ****                 UART_1_Start();
 153              		.loc 1 130 0
 154 004e FFF7FEFF 		bl	UART_1_Start
 155              	.LVL8:
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 6


 131:InterruptRoutines.c ****                 SPIM_1_Start();
 156              		.loc 1 131 0
 157 0052 FFF7FEFF 		bl	SPIM_1_Start
 158              	.LVL9:
 132:InterruptRoutines.c ****                 SPIM_2_Start();
 159              		.loc 1 132 0
 160 0056 FFF7FEFF 		bl	SPIM_2_Start
 161              	.LVL10:
 133:InterruptRoutines.c ****                 RGBLed_Start();
 162              		.loc 1 133 0
 163 005a FFF7FEFF 		bl	RGBLed_Start
 164              	.LVL11:
 165              	.L12:
 134:InterruptRoutines.c ****                 
 135:InterruptRoutines.c ****             }
 136:InterruptRoutines.c ****         }
 137:InterruptRoutines.c ****         /*flag for switch case for double click detection. if i'm in long pressure,
 138:InterruptRoutines.c ****         initialize to 0, to be sure that long pressure is not detected as normal click*/
 139:InterruptRoutines.c ****         TimerFlag=0;
 166              		.loc 1 139 0
 167 005e 0022     		movs	r2, #0
 168 0060 264B     		ldr	r3, .L21
 169 0062 DA70     		strb	r2, [r3, #3]
 170 0064 38BD     		pop	{r3, r4, r5, pc}
 171              	.L10:
 140:InterruptRoutines.c ****     }
 141:InterruptRoutines.c ****     
 142:InterruptRoutines.c ****     /*
 143:InterruptRoutines.c ****     the system CANNOT enter the start/stop CONDITIONS if it's in configuration mode.
 144:InterruptRoutines.c ****     so it enters if:
 145:InterruptRoutines.c ****     - time between push and release of the button is lower than time factor (not long pressure)
 146:InterruptRoutines.c ****        --> CHECK INSIDE IF DOUBLE CLICK
 147:InterruptRoutines.c ****     - the system is not in CONFIGURATION mode
 148:InterruptRoutines.c ****     */
 149:InterruptRoutines.c ****     
 150:InterruptRoutines.c ****     else if (i<TIME_FACTOR && configuration_status==OFF) {
 172              		.loc 1 150 0
 173 0066 052B     		cmp	r3, #5
 174 0068 46D8     		bhi	.L9
 175              		.loc 1 150 0 is_stmt 0 discriminator 1
 176 006a 244B     		ldr	r3, .L21
 177 006c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 178 006e 002B     		cmp	r3, #0
 179 0070 42D1     		bne	.L9
 151:InterruptRoutines.c ****         switch (TimerFlag)
 180              		.loc 1 151 0 is_stmt 1
 181 0072 224B     		ldr	r3, .L21
 182 0074 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 183 0076 012B     		cmp	r3, #1
 184 0078 09D0     		beq	.L15
 185 007a 13B1     		cbz	r3, .L16
 186 007c 022B     		cmp	r3, #2
 187 007e 36D0     		beq	.L17
 188 0080 38BD     		pop	{r3, r4, r5, pc}
 189              	.L16:
 152:InterruptRoutines.c ****     	{
 153:InterruptRoutines.c ****     		case 0: 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 7


 154:InterruptRoutines.c ****             //first time that the button has been pressed. normal pressure, SINGLE. Nothing to do.
 155:InterruptRoutines.c ****             TimerFlag=1;
 190              		.loc 1 155 0
 191 0082 0122     		movs	r2, #1
 192 0084 1D4B     		ldr	r3, .L21
 193 0086 DA70     		strb	r2, [r3, #3]
 156:InterruptRoutines.c ****             /*
 157:InterruptRoutines.c ****             if the button has been released, and it was not a long pressure, that is identified as 
 158:InterruptRoutines.c ****             TIMER button start, that is the one used to measure the time intercurring between two c
 159:InterruptRoutines.c ****             it will be stopped in the NEGATIVE isr of the next debounced pressure
 160:InterruptRoutines.c ****             */
 161:InterruptRoutines.c ****             TIMER_button_Start();
 194              		.loc 1 161 0
 195 0088 FFF7FEFF 		bl	TIMER_button_Start
 196              	.LVL12:
 162:InterruptRoutines.c ****     		break;
 197              		.loc 1 162 0
 198 008c 38BD     		pop	{r3, r4, r5, pc}
 199              	.L15:
 163:InterruptRoutines.c ****     		case 1:
 164:InterruptRoutines.c ****             /*button has been pressed for (at least) two times.
 165:InterruptRoutines.c ****             the time between first and second pressure is less than timer overflow, since
 166:InterruptRoutines.c ****             if it overflows (at least one time, that is 500 ms) the TimerFlag would be set as 2.
 167:InterruptRoutines.c ****             */
 168:InterruptRoutines.c ****             
 169:InterruptRoutines.c ****             /* CHECK THE PREVIOUS SYSTEM STATUS */
 170:InterruptRoutines.c ****             
 171:InterruptRoutines.c ****             if (system_status==OFF){
 200              		.loc 1 171 0
 201 008e 1B4B     		ldr	r3, .L21
 202 0090 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 203 0092 8BB9     		cbnz	r3, .L18
 172:InterruptRoutines.c ****                 /******************* SYSTEM START ACQUISITION ******************/
 173:InterruptRoutines.c ****                           
 174:InterruptRoutines.c ****                 system_status=ON;
 204              		.loc 1 174 0
 205 0094 194C     		ldr	r4, .L21
 206 0096 0120     		movs	r0, #1
 207 0098 A070     		strb	r0, [r4, #2]
 175:InterruptRoutines.c ****                 Pin_Led_Blue_Write(ON);
 208              		.loc 1 175 0
 209 009a FFF7FEFF 		bl	Pin_Led_Blue_Write
 210              	.LVL13:
 176:InterruptRoutines.c ****                  
 177:InterruptRoutines.c ****                 UART_1_Start();
 211              		.loc 1 177 0
 212 009e FFF7FEFF 		bl	UART_1_Start
 213              	.LVL14:
 178:InterruptRoutines.c ****                 SPIM_1_Start();
 214              		.loc 1 178 0
 215 00a2 FFF7FEFF 		bl	SPIM_1_Start
 216              	.LVL15:
 179:InterruptRoutines.c ****                 SPIM_2_Start();
 217              		.loc 1 179 0
 218 00a6 FFF7FEFF 		bl	SPIM_2_Start
 219              	.LVL16:
 180:InterruptRoutines.c ****                 RGBLed_Start();
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 8


 220              		.loc 1 180 0
 221 00aa FFF7FEFF 		bl	RGBLed_Start
 222              	.LVL17:
 181:InterruptRoutines.c ****                 
 182:InterruptRoutines.c ****                 EEPROM_writeByte(0x0000, system_status);
 223              		.loc 1 182 0
 224 00ae A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 225 00b0 0020     		movs	r0, #0
 226 00b2 FFF7FEFF 		bl	EEPROM_writeByte
 227              	.LVL18:
 228 00b6 16E0     		b	.L19
 229              	.L18:
 183:InterruptRoutines.c ****             }
 184:InterruptRoutines.c ****             else if (system_status==ON){
 230              		.loc 1 184 0
 231 00b8 012B     		cmp	r3, #1
 232 00ba 14D1     		bne	.L19
 185:InterruptRoutines.c ****                 /******************* SYSTEM STOP ACQUISITION ******************/
 186:InterruptRoutines.c ****                 system_status=OFF;
 233              		.loc 1 186 0
 234 00bc 0F4D     		ldr	r5, .L21
 235 00be 0024     		movs	r4, #0
 236 00c0 AC70     		strb	r4, [r5, #2]
 187:InterruptRoutines.c ****                 Pin_Led_Blue_Write(OFF);
 237              		.loc 1 187 0
 238 00c2 2046     		mov	r0, r4
 239 00c4 FFF7FEFF 		bl	Pin_Led_Blue_Write
 240              	.LVL19:
 188:InterruptRoutines.c ****                 EEPROM_writeByte(0x0000, system_status);
 241              		.loc 1 188 0
 242 00c8 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 243 00ca 2046     		mov	r0, r4
 244 00cc FFF7FEFF 		bl	EEPROM_writeByte
 245              	.LVL20:
 189:InterruptRoutines.c ****                 RGBLed_WriteColor(OFF, OFF, OFF);
 246              		.loc 1 189 0
 247 00d0 2246     		mov	r2, r4
 248 00d2 2146     		mov	r1, r4
 249 00d4 2046     		mov	r0, r4
 250 00d6 FFF7FEFF 		bl	RGBLed_WriteColor
 251              	.LVL21:
 190:InterruptRoutines.c ****                 SPIM_1_Stop();
 252              		.loc 1 190 0
 253 00da FFF7FEFF 		bl	SPIM_1_Stop
 254              	.LVL22:
 191:InterruptRoutines.c ****                 SPIM_2_Stop();
 255              		.loc 1 191 0
 256 00de FFF7FEFF 		bl	SPIM_2_Stop
 257              	.LVL23:
 192:InterruptRoutines.c ****                 UART_1_Stop();
 258              		.loc 1 192 0
 259 00e2 FFF7FEFF 		bl	UART_1_Stop
 260              	.LVL24:
 261              	.L19:
 193:InterruptRoutines.c ****                 //RGBLed_Stop();
 194:InterruptRoutines.c ****             }
 195:InterruptRoutines.c ****             //flag cleared
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 9


 196:InterruptRoutines.c ****             TimerFlag=0;  
 262              		.loc 1 196 0
 263 00e6 0022     		movs	r2, #0
 264 00e8 044B     		ldr	r3, .L21
 265 00ea DA70     		strb	r2, [r3, #3]
 197:InterruptRoutines.c ****     		break;
 266              		.loc 1 197 0
 267 00ec 38BD     		pop	{r3, r4, r5, pc}
 268              	.L17:
 198:InterruptRoutines.c ****             
 199:InterruptRoutines.c ****     		case 2: 
 200:InterruptRoutines.c ****             /*
 201:InterruptRoutines.c ****             time over 500ms--> TIME OVERFLOW OCCURED, FLAG=2, so it is not considered as a double c
 202:InterruptRoutines.c ****             Anyway, it could be considered as the first click of a double click, 
 203:InterruptRoutines.c ****             so the system will check the second pressing if it is before 500 ms.
 204:InterruptRoutines.c ****             */
 205:InterruptRoutines.c ****             TimerFlag=1;
 269              		.loc 1 205 0
 270 00ee 0122     		movs	r2, #1
 271 00f0 024B     		ldr	r3, .L21
 272 00f2 DA70     		strb	r2, [r3, #3]
 206:InterruptRoutines.c ****             /*
 207:InterruptRoutines.c ****             if the button has been released, and it was not a long pressure, that is identified as 
 208:InterruptRoutines.c ****             TIMER button start, that is the one used to measure the time intercurring between two c
 209:InterruptRoutines.c ****             it will be stopped in the NEGATIVE isr of the next debounced pressure
 210:InterruptRoutines.c ****             */
 211:InterruptRoutines.c ****             TIMER_button_Start();
 273              		.loc 1 211 0
 274 00f4 FFF7FEFF 		bl	TIMER_button_Start
 275              	.LVL25:
 276              	.L9:
 277 00f8 38BD     		pop	{r3, r4, r5, pc}
 278              	.L22:
 279 00fa 00BF     		.align	2
 280              	.L21:
 281 00fc 00000000 		.word	.LANCHOR0
 282              		.cfi_endproc
 283              	.LFE66:
 284              		.size	Custom_Pin_Button_Positive, .-Custom_Pin_Button_Positive
 285              		.section	.text.Custom_Timer_Button,"ax",%progbits
 286              		.align	2
 287              		.global	Custom_Timer_Button
 288              		.thumb
 289              		.thumb_func
 290              		.type	Custom_Timer_Button, %function
 291              	Custom_Timer_Button:
 292              	.LFB67:
 212:InterruptRoutines.c ****     		    
 213:InterruptRoutines.c ****     		break;
 214:InterruptRoutines.c ****             
 215:InterruptRoutines.c ****         }
 216:InterruptRoutines.c **** 
 217:InterruptRoutines.c ****     }
 218:InterruptRoutines.c **** }
 219:InterruptRoutines.c **** 
 220:InterruptRoutines.c **** CY_ISR(Custom_Timer_Button){
 293              		.loc 1 220 0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 10


 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 08B5     		push	{r3, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 221:InterruptRoutines.c ****     /* TIMER for double click interval. this timer has been started from previous ISR only after po
 222:InterruptRoutines.c ****     it it reaches overflow before next button negative edge, the flag is set to 2
 223:InterruptRoutines.c ****     */
 224:InterruptRoutines.c ****     TimerFlag=2;
 301              		.loc 1 224 0
 302 0002 0222     		movs	r2, #2
 303 0004 024B     		ldr	r3, .L25
 304 0006 DA70     		strb	r2, [r3, #3]
 225:InterruptRoutines.c ****     TIMER_button_ReadStatusRegister();
 305              		.loc 1 225 0
 306 0008 FFF7FEFF 		bl	TIMER_button_ReadStatusRegister
 307              	.LVL26:
 308 000c 08BD     		pop	{r3, pc}
 309              	.L26:
 310 000e 00BF     		.align	2
 311              	.L25:
 312 0010 00000000 		.word	.LANCHOR0
 313              		.cfi_endproc
 314              	.LFE67:
 315              		.size	Custom_Timer_Button, .-Custom_Timer_Button
 316              		.section	.text.Custom_LED_Blinking,"ax",%progbits
 317              		.align	2
 318              		.global	Custom_LED_Blinking
 319              		.thumb
 320              		.thumb_func
 321              		.type	Custom_LED_Blinking, %function
 322              	Custom_LED_Blinking:
 323              	.LFB68:
 226:InterruptRoutines.c **** 
 227:InterruptRoutines.c **** }
 228:InterruptRoutines.c **** 
 229:InterruptRoutines.c **** CY_ISR(Custom_LED_Blinking){
 324              		.loc 1 229 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 230:InterruptRoutines.c ****     /* ISR on overflow 250 ms
 231:InterruptRoutines.c ****     double function:
 232:InterruptRoutines.c ****     1. toggle the led if configuration mode
 233:InterruptRoutines.c ****     2. count the time between NEGATIVE (pressed) and POSITIVE (released)
 234:InterruptRoutines.c ****     edge of the debouncer
 235:InterruptRoutines.c ****     */
 236:InterruptRoutines.c ****     Timer_Blinking_ReadStatusRegister();
 332              		.loc 1 236 0
 333 0002 FFF7FEFF 		bl	Timer_Blinking_ReadStatusRegister
 334              	.LVL27:
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 11


 237:InterruptRoutines.c ****     i=i+1;
 335              		.loc 1 237 0
 336 0006 074B     		ldr	r3, .L30
 337 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 338 000a 0132     		adds	r2, r2, #1
 339 000c 1A70     		strb	r2, [r3]
 238:InterruptRoutines.c ****     if (configuration_status==1){
 340              		.loc 1 238 0
 341 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 342 0010 012B     		cmp	r3, #1
 343 0012 06D1     		bne	.L27
 239:InterruptRoutines.c ****         Pin_Led_Blue_Write(!Pin_Led_Blue_Read());
 344              		.loc 1 239 0
 345 0014 FFF7FEFF 		bl	Pin_Led_Blue_Read
 346              	.LVL28:
 347 0018 B0FA80F0 		clz	r0, r0
 348 001c 4009     		lsrs	r0, r0, #5
 349 001e FFF7FEFF 		bl	Pin_Led_Blue_Write
 350              	.LVL29:
 351              	.L27:
 352 0022 08BD     		pop	{r3, pc}
 353              	.L31:
 354              		.align	2
 355              	.L30:
 356 0024 00000000 		.word	.LANCHOR0
 357              		.cfi_endproc
 358              	.LFE68:
 359              		.size	Custom_LED_Blinking, .-Custom_LED_Blinking
 360              		.global	i
 361              		.global	TimerFlag
 362              		.global	configuration_status
 363              		.global	system_status
 364              		.comm	bufferUART,100,4
 365              		.comm	data_water,1,1
 366              		.comm	PacketReadyFlag,1,1
 367              		.bss
 368              		.set	.LANCHOR0,. + 0
 369              		.type	i, %object
 370              		.size	i, 1
 371              	i:
 372 0000 00       		.space	1
 373              		.type	configuration_status, %object
 374              		.size	configuration_status, 1
 375              	configuration_status:
 376 0001 00       		.space	1
 377              		.type	system_status, %object
 378              		.size	system_status, 1
 379              	system_status:
 380 0002 00       		.space	1
 381              		.type	TimerFlag, %object
 382              		.size	TimerFlag, 1
 383              	TimerFlag:
 384 0003 00       		.space	1
 385              		.text
 386              	.Letext0:
 387              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 388              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 12


 389              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 390              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 391              		.file 6 "InterruptRoutines.h"
 392              		.file 7 "Generated_Source\\PSoC5/Pin_ISR.h"
 393              		.file 8 "Generated_Source\\PSoC5/TIMER_button.h"
 394              		.file 9 "RGBLedDriver.h"
 395              		.file 10 "Generated_Source\\PSoC5/SPIM_1.h"
 396              		.file 11 "Generated_Source\\PSoC5/SPIM_2.h"
 397              		.file 12 "Generated_Source\\PSoC5/UART_1.h"
 398              		.file 13 "Generated_Source\\PSoC5/Pin_Led_Blue.h"
 399              		.file 14 "25LC256.h"
 400              		.file 15 "Generated_Source\\PSoC5/Timer_Blinking.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 F3030000 		.4byte	0x3f3
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c D8000000 		.4byte	.LASF47
 409 0010 0C       		.byte	0xc
 410 0011 D5030000 		.4byte	.LASF48
 411 0015 2E030000 		.4byte	.LASF49
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 01       		.byte	0x1
 417 0027 06       		.byte	0x6
 418 0028 22030000 		.4byte	.LASF0
 419 002c 03       		.uleb128 0x3
 420 002d 32000000 		.4byte	.LASF4
 421 0031 02       		.byte	0x2
 422 0032 1D       		.byte	0x1d
 423 0033 37000000 		.4byte	0x37
 424 0037 02       		.uleb128 0x2
 425 0038 01       		.byte	0x1
 426 0039 08       		.byte	0x8
 427 003a CA000000 		.4byte	.LASF1
 428 003e 02       		.uleb128 0x2
 429 003f 02       		.byte	0x2
 430 0040 05       		.byte	0x5
 431 0041 ED010000 		.4byte	.LASF2
 432 0045 02       		.uleb128 0x2
 433 0046 02       		.byte	0x2
 434 0047 07       		.byte	0x7
 435 0048 A2010000 		.4byte	.LASF3
 436 004c 03       		.uleb128 0x3
 437 004d 53000000 		.4byte	.LASF5
 438 0051 02       		.byte	0x2
 439 0052 3F       		.byte	0x3f
 440 0053 57000000 		.4byte	0x57
 441 0057 02       		.uleb128 0x2
 442 0058 04       		.byte	0x4
 443 0059 05       		.byte	0x5
 444 005a 0D030000 		.4byte	.LASF6
 445 005e 02       		.uleb128 0x2
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 13


 446 005f 04       		.byte	0x4
 447 0060 07       		.byte	0x7
 448 0061 85010000 		.4byte	.LASF7
 449 0065 02       		.uleb128 0x2
 450 0066 08       		.byte	0x8
 451 0067 05       		.byte	0x5
 452 0068 89020000 		.4byte	.LASF8
 453 006c 02       		.uleb128 0x2
 454 006d 08       		.byte	0x8
 455 006e 07       		.byte	0x7
 456 006f 37020000 		.4byte	.LASF9
 457 0073 04       		.uleb128 0x4
 458 0074 04       		.byte	0x4
 459 0075 05       		.byte	0x5
 460 0076 696E7400 		.ascii	"int\000"
 461 007a 02       		.uleb128 0x2
 462 007b 04       		.byte	0x4
 463 007c 07       		.byte	0x7
 464 007d 17020000 		.4byte	.LASF10
 465 0081 03       		.uleb128 0x3
 466 0082 4E020000 		.4byte	.LASF11
 467 0086 03       		.byte	0x3
 468 0087 18       		.byte	0x18
 469 0088 2C000000 		.4byte	0x2c
 470 008c 03       		.uleb128 0x3
 471 008d 78020000 		.4byte	.LASF12
 472 0091 03       		.byte	0x3
 473 0092 2C       		.byte	0x2c
 474 0093 4C000000 		.4byte	0x4c
 475 0097 05       		.uleb128 0x5
 476 0098 C4000000 		.4byte	.LASF13
 477 009c 04       		.byte	0x4
 478 009d E401     		.2byte	0x1e4
 479 009f 37000000 		.4byte	0x37
 480 00a3 02       		.uleb128 0x2
 481 00a4 04       		.byte	0x4
 482 00a5 04       		.byte	0x4
 483 00a6 BE000000 		.4byte	.LASF14
 484 00aa 02       		.uleb128 0x2
 485 00ab 08       		.byte	0x8
 486 00ac 04       		.byte	0x4
 487 00ad D4010000 		.4byte	.LASF15
 488 00b1 02       		.uleb128 0x2
 489 00b2 01       		.byte	0x1
 490 00b3 08       		.byte	0x8
 491 00b4 97020000 		.4byte	.LASF16
 492 00b8 06       		.uleb128 0x6
 493 00b9 97000000 		.4byte	0x97
 494 00bd 02       		.uleb128 0x2
 495 00be 08       		.byte	0x8
 496 00bf 04       		.byte	0x4
 497 00c0 16030000 		.4byte	.LASF17
 498 00c4 02       		.uleb128 0x2
 499 00c5 04       		.byte	0x4
 500 00c6 07       		.byte	0x7
 501 00c7 80020000 		.4byte	.LASF18
 502 00cb 07       		.uleb128 0x7
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 14


 503 00cc EC020000 		.4byte	.LASF19
 504 00d0 01       		.byte	0x1
 505 00d1 21       		.byte	0x21
 506 00d2 00000000 		.4byte	.LFB64
 507 00d6 14000000 		.4byte	.LFE64-.LFB64
 508 00da 01       		.uleb128 0x1
 509 00db 9C       		.byte	0x9c
 510 00dc EA000000 		.4byte	0xea
 511 00e0 08       		.uleb128 0x8
 512 00e1 0C000000 		.4byte	.LVL0
 513 00e5 46030000 		.4byte	0x346
 514 00e9 00       		.byte	0
 515 00ea 07       		.uleb128 0x7
 516 00eb FB020000 		.4byte	.LASF20
 517 00ef 01       		.byte	0x1
 518 00f0 4A       		.byte	0x4a
 519 00f1 00000000 		.4byte	.LFB65
 520 00f5 14000000 		.4byte	.LFE65-.LFB65
 521 00f9 01       		.uleb128 0x1
 522 00fa 9C       		.byte	0x9c
 523 00fb 09010000 		.4byte	0x109
 524 00ff 08       		.uleb128 0x8
 525 0100 06000000 		.4byte	.LVL1
 526 0104 51030000 		.4byte	0x351
 527 0108 00       		.byte	0
 528 0109 07       		.uleb128 0x7
 529 010a 96000000 		.4byte	.LASF21
 530 010e 01       		.byte	0x1
 531 010f 5B       		.byte	0x5b
 532 0110 00000000 		.4byte	.LFB66
 533 0114 00010000 		.4byte	.LFE66-.LFB66
 534 0118 01       		.uleb128 0x1
 535 0119 9C       		.byte	0x9c
 536 011a 60020000 		.4byte	0x260
 537 011e 09       		.uleb128 0x9
 538 011f 20000000 		.4byte	.LVL2
 539 0123 5C030000 		.4byte	0x35c
 540 0127 3B010000 		.4byte	0x13b
 541 012b 0A       		.uleb128 0xa
 542 012c 01       		.uleb128 0x1
 543 012d 50       		.byte	0x50
 544 012e 01       		.uleb128 0x1
 545 012f 30       		.byte	0x30
 546 0130 0A       		.uleb128 0xa
 547 0131 01       		.uleb128 0x1
 548 0132 51       		.byte	0x51
 549 0133 01       		.uleb128 0x1
 550 0134 30       		.byte	0x30
 551 0135 0A       		.uleb128 0xa
 552 0136 01       		.uleb128 0x1
 553 0137 52       		.byte	0x52
 554 0138 01       		.uleb128 0x1
 555 0139 30       		.byte	0x30
 556 013a 00       		.byte	0
 557 013b 08       		.uleb128 0x8
 558 013c 24000000 		.4byte	.LVL3
 559 0140 67030000 		.4byte	0x367
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 15


 560 0144 08       		.uleb128 0x8
 561 0145 28000000 		.4byte	.LVL4
 562 0149 72030000 		.4byte	0x372
 563 014d 08       		.uleb128 0x8
 564 014e 2C000000 		.4byte	.LVL5
 565 0152 7D030000 		.4byte	0x37d
 566 0156 09       		.uleb128 0x9
 567 0157 42000000 		.4byte	.LVL6
 568 015b 88030000 		.4byte	0x388
 569 015f 69010000 		.4byte	0x169
 570 0163 0A       		.uleb128 0xa
 571 0164 01       		.uleb128 0x1
 572 0165 50       		.byte	0x50
 573 0166 01       		.uleb128 0x1
 574 0167 30       		.byte	0x30
 575 0168 00       		.byte	0
 576 0169 09       		.uleb128 0x9
 577 016a 4E000000 		.4byte	.LVL7
 578 016e 88030000 		.4byte	0x388
 579 0172 7C010000 		.4byte	0x17c
 580 0176 0A       		.uleb128 0xa
 581 0177 01       		.uleb128 0x1
 582 0178 50       		.byte	0x50
 583 0179 01       		.uleb128 0x1
 584 017a 31       		.byte	0x31
 585 017b 00       		.byte	0
 586 017c 08       		.uleb128 0x8
 587 017d 52000000 		.4byte	.LVL8
 588 0181 93030000 		.4byte	0x393
 589 0185 08       		.uleb128 0x8
 590 0186 56000000 		.4byte	.LVL9
 591 018a 9E030000 		.4byte	0x39e
 592 018e 08       		.uleb128 0x8
 593 018f 5A000000 		.4byte	.LVL10
 594 0193 A9030000 		.4byte	0x3a9
 595 0197 08       		.uleb128 0x8
 596 0198 5E000000 		.4byte	.LVL11
 597 019c B4030000 		.4byte	0x3b4
 598 01a0 08       		.uleb128 0x8
 599 01a1 8C000000 		.4byte	.LVL12
 600 01a5 BF030000 		.4byte	0x3bf
 601 01a9 09       		.uleb128 0x9
 602 01aa 9E000000 		.4byte	.LVL13
 603 01ae 88030000 		.4byte	0x388
 604 01b2 BC010000 		.4byte	0x1bc
 605 01b6 0A       		.uleb128 0xa
 606 01b7 01       		.uleb128 0x1
 607 01b8 50       		.byte	0x50
 608 01b9 01       		.uleb128 0x1
 609 01ba 31       		.byte	0x31
 610 01bb 00       		.byte	0
 611 01bc 08       		.uleb128 0x8
 612 01bd A2000000 		.4byte	.LVL14
 613 01c1 93030000 		.4byte	0x393
 614 01c5 08       		.uleb128 0x8
 615 01c6 A6000000 		.4byte	.LVL15
 616 01ca 9E030000 		.4byte	0x39e
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 16


 617 01ce 08       		.uleb128 0x8
 618 01cf AA000000 		.4byte	.LVL16
 619 01d3 A9030000 		.4byte	0x3a9
 620 01d7 08       		.uleb128 0x8
 621 01d8 AE000000 		.4byte	.LVL17
 622 01dc B4030000 		.4byte	0x3b4
 623 01e0 09       		.uleb128 0x9
 624 01e1 B6000000 		.4byte	.LVL18
 625 01e5 CA030000 		.4byte	0x3ca
 626 01e9 F3010000 		.4byte	0x1f3
 627 01ed 0A       		.uleb128 0xa
 628 01ee 01       		.uleb128 0x1
 629 01ef 50       		.byte	0x50
 630 01f0 01       		.uleb128 0x1
 631 01f1 30       		.byte	0x30
 632 01f2 00       		.byte	0
 633 01f3 09       		.uleb128 0x9
 634 01f4 C8000000 		.4byte	.LVL19
 635 01f8 88030000 		.4byte	0x388
 636 01fc 07020000 		.4byte	0x207
 637 0200 0A       		.uleb128 0xa
 638 0201 01       		.uleb128 0x1
 639 0202 50       		.byte	0x50
 640 0203 02       		.uleb128 0x2
 641 0204 74       		.byte	0x74
 642 0205 00       		.sleb128 0
 643 0206 00       		.byte	0
 644 0207 09       		.uleb128 0x9
 645 0208 D0000000 		.4byte	.LVL20
 646 020c CA030000 		.4byte	0x3ca
 647 0210 1B020000 		.4byte	0x21b
 648 0214 0A       		.uleb128 0xa
 649 0215 01       		.uleb128 0x1
 650 0216 50       		.byte	0x50
 651 0217 02       		.uleb128 0x2
 652 0218 74       		.byte	0x74
 653 0219 00       		.sleb128 0
 654 021a 00       		.byte	0
 655 021b 09       		.uleb128 0x9
 656 021c DA000000 		.4byte	.LVL21
 657 0220 5C030000 		.4byte	0x35c
 658 0224 3B020000 		.4byte	0x23b
 659 0228 0A       		.uleb128 0xa
 660 0229 01       		.uleb128 0x1
 661 022a 50       		.byte	0x50
 662 022b 02       		.uleb128 0x2
 663 022c 74       		.byte	0x74
 664 022d 00       		.sleb128 0
 665 022e 0A       		.uleb128 0xa
 666 022f 01       		.uleb128 0x1
 667 0230 51       		.byte	0x51
 668 0231 02       		.uleb128 0x2
 669 0232 74       		.byte	0x74
 670 0233 00       		.sleb128 0
 671 0234 0A       		.uleb128 0xa
 672 0235 01       		.uleb128 0x1
 673 0236 52       		.byte	0x52
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 17


 674 0237 02       		.uleb128 0x2
 675 0238 74       		.byte	0x74
 676 0239 00       		.sleb128 0
 677 023a 00       		.byte	0
 678 023b 08       		.uleb128 0x8
 679 023c DE000000 		.4byte	.LVL22
 680 0240 67030000 		.4byte	0x367
 681 0244 08       		.uleb128 0x8
 682 0245 E2000000 		.4byte	.LVL23
 683 0249 72030000 		.4byte	0x372
 684 024d 08       		.uleb128 0x8
 685 024e E6000000 		.4byte	.LVL24
 686 0252 7D030000 		.4byte	0x37d
 687 0256 08       		.uleb128 0x8
 688 0257 F8000000 		.4byte	.LVL25
 689 025b BF030000 		.4byte	0x3bf
 690 025f 00       		.byte	0
 691 0260 07       		.uleb128 0x7
 692 0261 64020000 		.4byte	.LASF22
 693 0265 01       		.byte	0x1
 694 0266 DC       		.byte	0xdc
 695 0267 00000000 		.4byte	.LFB67
 696 026b 14000000 		.4byte	.LFE67-.LFB67
 697 026f 01       		.uleb128 0x1
 698 0270 9C       		.byte	0x9c
 699 0271 7F020000 		.4byte	0x27f
 700 0275 08       		.uleb128 0x8
 701 0276 0C000000 		.4byte	.LVL26
 702 027a D5030000 		.4byte	0x3d5
 703 027e 00       		.byte	0
 704 027f 07       		.uleb128 0x7
 705 0280 11000000 		.4byte	.LASF23
 706 0284 01       		.byte	0x1
 707 0285 E5       		.byte	0xe5
 708 0286 00000000 		.4byte	.LFB68
 709 028a 28000000 		.4byte	.LFE68-.LFB68
 710 028e 01       		.uleb128 0x1
 711 028f 9C       		.byte	0x9c
 712 0290 B0020000 		.4byte	0x2b0
 713 0294 08       		.uleb128 0x8
 714 0295 06000000 		.4byte	.LVL27
 715 0299 E0030000 		.4byte	0x3e0
 716 029d 08       		.uleb128 0x8
 717 029e 18000000 		.4byte	.LVL28
 718 02a2 EB030000 		.4byte	0x3eb
 719 02a6 08       		.uleb128 0x8
 720 02a7 22000000 		.4byte	.LVL29
 721 02ab 88030000 		.4byte	0x388
 722 02af 00       		.byte	0
 723 02b0 0B       		.uleb128 0xb
 724 02b1 B5010000 		.4byte	.LASF24
 725 02b5 05       		.byte	0x5
 726 02b6 1207     		.2byte	0x712
 727 02b8 BC020000 		.4byte	0x2bc
 728 02bc 06       		.uleb128 0x6
 729 02bd 8C000000 		.4byte	0x8c
 730 02c1 0C       		.uleb128 0xc
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 18


 731 02c2 DC020000 		.4byte	.LASF25
 732 02c6 06       		.byte	0x6
 733 02c7 1A       		.byte	0x1a
 734 02c8 B8000000 		.4byte	0xb8
 735 02cc 05       		.uleb128 0x5
 736 02cd 03       		.byte	0x3
 737 02ce 00000000 		.4byte	PacketReadyFlag
 738 02d2 0C       		.uleb128 0xc
 739 02d3 97010000 		.4byte	.LASF26
 740 02d7 06       		.byte	0x6
 741 02d8 1B       		.byte	0x1b
 742 02d9 97000000 		.4byte	0x97
 743 02dd 05       		.uleb128 0x5
 744 02de 03       		.byte	0x3
 745 02df 00000000 		.4byte	data_water
 746 02e3 0D       		.uleb128 0xd
 747 02e4 B1000000 		.4byte	0xb1
 748 02e8 F3020000 		.4byte	0x2f3
 749 02ec 0E       		.uleb128 0xe
 750 02ed C4000000 		.4byte	0xc4
 751 02f1 63       		.byte	0x63
 752 02f2 00       		.byte	0
 753 02f3 0C       		.uleb128 0xc
 754 02f4 BE030000 		.4byte	.LASF27
 755 02f8 01       		.byte	0x1
 756 02f9 12       		.byte	0x12
 757 02fa E3020000 		.4byte	0x2e3
 758 02fe 05       		.uleb128 0x5
 759 02ff 03       		.byte	0x3
 760 0300 00000000 		.4byte	bufferUART
 761 0304 0C       		.uleb128 0xc
 762 0305 56020000 		.4byte	.LASF28
 763 0309 01       		.byte	0x1
 764 030a 1B       		.byte	0x1b
 765 030b 81000000 		.4byte	0x81
 766 030f 05       		.uleb128 0x5
 767 0310 03       		.byte	0x3
 768 0311 00000000 		.4byte	system_status
 769 0315 0C       		.uleb128 0xc
 770 0316 5D000000 		.4byte	.LASF29
 771 031a 01       		.byte	0x1
 772 031b 1C       		.byte	0x1c
 773 031c 81000000 		.4byte	0x81
 774 0320 05       		.uleb128 0x5
 775 0321 03       		.byte	0x3
 776 0322 00000000 		.4byte	configuration_status
 777 0326 0C       		.uleb128 0xc
 778 0327 3C000000 		.4byte	.LASF30
 779 032b 01       		.byte	0x1
 780 032c 1D       		.byte	0x1d
 781 032d 97000000 		.4byte	0x97
 782 0331 05       		.uleb128 0x5
 783 0332 03       		.byte	0x3
 784 0333 00000000 		.4byte	TimerFlag
 785 0337 0F       		.uleb128 0xf
 786 0338 6900     		.ascii	"i\000"
 787 033a 01       		.byte	0x1
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 19


 788 033b 1F       		.byte	0x1f
 789 033c 81000000 		.4byte	0x81
 790 0340 05       		.uleb128 0x5
 791 0341 03       		.byte	0x3
 792 0342 00000000 		.4byte	i
 793 0346 10       		.uleb128 0x10
 794 0347 7F000000 		.4byte	.LASF31
 795 034b 7F000000 		.4byte	.LASF31
 796 034f 07       		.byte	0x7
 797 0350 2B       		.byte	0x2b
 798 0351 10       		.uleb128 0x10
 799 0352 DB010000 		.4byte	.LASF32
 800 0356 DB010000 		.4byte	.LASF32
 801 035a 08       		.byte	0x8
 802 035b 5B       		.byte	0x5b
 803 035c 10       		.uleb128 0x10
 804 035d CA020000 		.4byte	.LASF33
 805 0361 CA020000 		.4byte	.LASF33
 806 0365 09       		.byte	0x9
 807 0366 1E       		.byte	0x1e
 808 0367 10       		.uleb128 0x10
 809 0368 9C020000 		.4byte	.LASF34
 810 036c 9C020000 		.4byte	.LASF34
 811 0370 0A       		.byte	0xa
 812 0371 4E       		.byte	0x4e
 813 0372 10       		.uleb128 0x10
 814 0373 C9030000 		.4byte	.LASF35
 815 0377 C9030000 		.4byte	.LASF35
 816 037b 0B       		.byte	0xb
 817 037c 4E       		.byte	0x4e
 818 037d 10       		.uleb128 0x10
 819 037e 79010000 		.4byte	.LASF36
 820 0382 79010000 		.4byte	.LASF36
 821 0386 0C       		.byte	0xc
 822 0387 55       		.byte	0x55
 823 0388 10       		.uleb128 0x10
 824 0389 24020000 		.4byte	.LASF37
 825 038d 24020000 		.4byte	.LASF37
 826 0391 0D       		.byte	0xd
 827 0392 26       		.byte	0x26
 828 0393 10       		.uleb128 0x10
 829 0394 25000000 		.4byte	.LASF38
 830 0398 25000000 		.4byte	.LASF38
 831 039c 0C       		.byte	0xc
 832 039d 54       		.byte	0x54
 833 039e 10       		.uleb128 0x10
 834 039f 46000000 		.4byte	.LASF39
 835 03a3 46000000 		.4byte	.LASF39
 836 03a7 0A       		.byte	0xa
 837 03a8 4D       		.byte	0x4d
 838 03a9 10       		.uleb128 0x10
 839 03aa 72000000 		.4byte	.LASF40
 840 03ae 72000000 		.4byte	.LASF40
 841 03b2 0B       		.byte	0xb
 842 03b3 4D       		.byte	0x4d
 843 03b4 10       		.uleb128 0x10
 844 03b5 B1000000 		.4byte	.LASF41
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 20


 845 03b9 B1000000 		.4byte	.LASF41
 846 03bd 09       		.byte	0x9
 847 03be 14       		.byte	0x14
 848 03bf 10       		.uleb128 0x10
 849 03c0 66010000 		.4byte	.LASF42
 850 03c4 66010000 		.4byte	.LASF42
 851 03c8 08       		.byte	0x8
 852 03c9 5A       		.byte	0x5a
 853 03ca 10       		.uleb128 0x10
 854 03cb 00000000 		.4byte	.LASF43
 855 03cf 00000000 		.4byte	.LASF43
 856 03d3 0E       		.byte	0xe
 857 03d4 51       		.byte	0x51
 858 03d5 10       		.uleb128 0x10
 859 03d6 F7010000 		.4byte	.LASF44
 860 03da F7010000 		.4byte	.LASF44
 861 03de 08       		.byte	0x8
 862 03df 5E       		.byte	0x5e
 863 03e0 10       		.uleb128 0x10
 864 03e1 A8020000 		.4byte	.LASF45
 865 03e5 A8020000 		.4byte	.LASF45
 866 03e9 0F       		.byte	0xf
 867 03ea 5E       		.byte	0x5e
 868 03eb 10       		.uleb128 0x10
 869 03ec C2010000 		.4byte	.LASF46
 870 03f0 C2010000 		.4byte	.LASF46
 871 03f4 0D       		.byte	0xd
 872 03f5 29       		.byte	0x29
 873 03f6 00       		.byte	0
 874              		.section	.debug_abbrev,"",%progbits
 875              	.Ldebug_abbrev0:
 876 0000 01       		.uleb128 0x1
 877 0001 11       		.uleb128 0x11
 878 0002 01       		.byte	0x1
 879 0003 25       		.uleb128 0x25
 880 0004 0E       		.uleb128 0xe
 881 0005 13       		.uleb128 0x13
 882 0006 0B       		.uleb128 0xb
 883 0007 03       		.uleb128 0x3
 884 0008 0E       		.uleb128 0xe
 885 0009 1B       		.uleb128 0x1b
 886 000a 0E       		.uleb128 0xe
 887 000b 55       		.uleb128 0x55
 888 000c 17       		.uleb128 0x17
 889 000d 11       		.uleb128 0x11
 890 000e 01       		.uleb128 0x1
 891 000f 10       		.uleb128 0x10
 892 0010 17       		.uleb128 0x17
 893 0011 00       		.byte	0
 894 0012 00       		.byte	0
 895 0013 02       		.uleb128 0x2
 896 0014 24       		.uleb128 0x24
 897 0015 00       		.byte	0
 898 0016 0B       		.uleb128 0xb
 899 0017 0B       		.uleb128 0xb
 900 0018 3E       		.uleb128 0x3e
 901 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 21


 902 001a 03       		.uleb128 0x3
 903 001b 0E       		.uleb128 0xe
 904 001c 00       		.byte	0
 905 001d 00       		.byte	0
 906 001e 03       		.uleb128 0x3
 907 001f 16       		.uleb128 0x16
 908 0020 00       		.byte	0
 909 0021 03       		.uleb128 0x3
 910 0022 0E       		.uleb128 0xe
 911 0023 3A       		.uleb128 0x3a
 912 0024 0B       		.uleb128 0xb
 913 0025 3B       		.uleb128 0x3b
 914 0026 0B       		.uleb128 0xb
 915 0027 49       		.uleb128 0x49
 916 0028 13       		.uleb128 0x13
 917 0029 00       		.byte	0
 918 002a 00       		.byte	0
 919 002b 04       		.uleb128 0x4
 920 002c 24       		.uleb128 0x24
 921 002d 00       		.byte	0
 922 002e 0B       		.uleb128 0xb
 923 002f 0B       		.uleb128 0xb
 924 0030 3E       		.uleb128 0x3e
 925 0031 0B       		.uleb128 0xb
 926 0032 03       		.uleb128 0x3
 927 0033 08       		.uleb128 0x8
 928 0034 00       		.byte	0
 929 0035 00       		.byte	0
 930 0036 05       		.uleb128 0x5
 931 0037 16       		.uleb128 0x16
 932 0038 00       		.byte	0
 933 0039 03       		.uleb128 0x3
 934 003a 0E       		.uleb128 0xe
 935 003b 3A       		.uleb128 0x3a
 936 003c 0B       		.uleb128 0xb
 937 003d 3B       		.uleb128 0x3b
 938 003e 05       		.uleb128 0x5
 939 003f 49       		.uleb128 0x49
 940 0040 13       		.uleb128 0x13
 941 0041 00       		.byte	0
 942 0042 00       		.byte	0
 943 0043 06       		.uleb128 0x6
 944 0044 35       		.uleb128 0x35
 945 0045 00       		.byte	0
 946 0046 49       		.uleb128 0x49
 947 0047 13       		.uleb128 0x13
 948 0048 00       		.byte	0
 949 0049 00       		.byte	0
 950 004a 07       		.uleb128 0x7
 951 004b 2E       		.uleb128 0x2e
 952 004c 01       		.byte	0x1
 953 004d 3F       		.uleb128 0x3f
 954 004e 19       		.uleb128 0x19
 955 004f 03       		.uleb128 0x3
 956 0050 0E       		.uleb128 0xe
 957 0051 3A       		.uleb128 0x3a
 958 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 22


 959 0053 3B       		.uleb128 0x3b
 960 0054 0B       		.uleb128 0xb
 961 0055 27       		.uleb128 0x27
 962 0056 19       		.uleb128 0x19
 963 0057 11       		.uleb128 0x11
 964 0058 01       		.uleb128 0x1
 965 0059 12       		.uleb128 0x12
 966 005a 06       		.uleb128 0x6
 967 005b 40       		.uleb128 0x40
 968 005c 18       		.uleb128 0x18
 969 005d 9742     		.uleb128 0x2117
 970 005f 19       		.uleb128 0x19
 971 0060 01       		.uleb128 0x1
 972 0061 13       		.uleb128 0x13
 973 0062 00       		.byte	0
 974 0063 00       		.byte	0
 975 0064 08       		.uleb128 0x8
 976 0065 898201   		.uleb128 0x4109
 977 0068 00       		.byte	0
 978 0069 11       		.uleb128 0x11
 979 006a 01       		.uleb128 0x1
 980 006b 31       		.uleb128 0x31
 981 006c 13       		.uleb128 0x13
 982 006d 00       		.byte	0
 983 006e 00       		.byte	0
 984 006f 09       		.uleb128 0x9
 985 0070 898201   		.uleb128 0x4109
 986 0073 01       		.byte	0x1
 987 0074 11       		.uleb128 0x11
 988 0075 01       		.uleb128 0x1
 989 0076 31       		.uleb128 0x31
 990 0077 13       		.uleb128 0x13
 991 0078 01       		.uleb128 0x1
 992 0079 13       		.uleb128 0x13
 993 007a 00       		.byte	0
 994 007b 00       		.byte	0
 995 007c 0A       		.uleb128 0xa
 996 007d 8A8201   		.uleb128 0x410a
 997 0080 00       		.byte	0
 998 0081 02       		.uleb128 0x2
 999 0082 18       		.uleb128 0x18
 1000 0083 9142     		.uleb128 0x2111
 1001 0085 18       		.uleb128 0x18
 1002 0086 00       		.byte	0
 1003 0087 00       		.byte	0
 1004 0088 0B       		.uleb128 0xb
 1005 0089 34       		.uleb128 0x34
 1006 008a 00       		.byte	0
 1007 008b 03       		.uleb128 0x3
 1008 008c 0E       		.uleb128 0xe
 1009 008d 3A       		.uleb128 0x3a
 1010 008e 0B       		.uleb128 0xb
 1011 008f 3B       		.uleb128 0x3b
 1012 0090 05       		.uleb128 0x5
 1013 0091 49       		.uleb128 0x49
 1014 0092 13       		.uleb128 0x13
 1015 0093 3F       		.uleb128 0x3f
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 23


 1016 0094 19       		.uleb128 0x19
 1017 0095 3C       		.uleb128 0x3c
 1018 0096 19       		.uleb128 0x19
 1019 0097 00       		.byte	0
 1020 0098 00       		.byte	0
 1021 0099 0C       		.uleb128 0xc
 1022 009a 34       		.uleb128 0x34
 1023 009b 00       		.byte	0
 1024 009c 03       		.uleb128 0x3
 1025 009d 0E       		.uleb128 0xe
 1026 009e 3A       		.uleb128 0x3a
 1027 009f 0B       		.uleb128 0xb
 1028 00a0 3B       		.uleb128 0x3b
 1029 00a1 0B       		.uleb128 0xb
 1030 00a2 49       		.uleb128 0x49
 1031 00a3 13       		.uleb128 0x13
 1032 00a4 3F       		.uleb128 0x3f
 1033 00a5 19       		.uleb128 0x19
 1034 00a6 02       		.uleb128 0x2
 1035 00a7 18       		.uleb128 0x18
 1036 00a8 00       		.byte	0
 1037 00a9 00       		.byte	0
 1038 00aa 0D       		.uleb128 0xd
 1039 00ab 01       		.uleb128 0x1
 1040 00ac 01       		.byte	0x1
 1041 00ad 49       		.uleb128 0x49
 1042 00ae 13       		.uleb128 0x13
 1043 00af 01       		.uleb128 0x1
 1044 00b0 13       		.uleb128 0x13
 1045 00b1 00       		.byte	0
 1046 00b2 00       		.byte	0
 1047 00b3 0E       		.uleb128 0xe
 1048 00b4 21       		.uleb128 0x21
 1049 00b5 00       		.byte	0
 1050 00b6 49       		.uleb128 0x49
 1051 00b7 13       		.uleb128 0x13
 1052 00b8 2F       		.uleb128 0x2f
 1053 00b9 0B       		.uleb128 0xb
 1054 00ba 00       		.byte	0
 1055 00bb 00       		.byte	0
 1056 00bc 0F       		.uleb128 0xf
 1057 00bd 34       		.uleb128 0x34
 1058 00be 00       		.byte	0
 1059 00bf 03       		.uleb128 0x3
 1060 00c0 08       		.uleb128 0x8
 1061 00c1 3A       		.uleb128 0x3a
 1062 00c2 0B       		.uleb128 0xb
 1063 00c3 3B       		.uleb128 0x3b
 1064 00c4 0B       		.uleb128 0xb
 1065 00c5 49       		.uleb128 0x49
 1066 00c6 13       		.uleb128 0x13
 1067 00c7 3F       		.uleb128 0x3f
 1068 00c8 19       		.uleb128 0x19
 1069 00c9 02       		.uleb128 0x2
 1070 00ca 18       		.uleb128 0x18
 1071 00cb 00       		.byte	0
 1072 00cc 00       		.byte	0
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 24


 1073 00cd 10       		.uleb128 0x10
 1074 00ce 2E       		.uleb128 0x2e
 1075 00cf 00       		.byte	0
 1076 00d0 3F       		.uleb128 0x3f
 1077 00d1 19       		.uleb128 0x19
 1078 00d2 3C       		.uleb128 0x3c
 1079 00d3 19       		.uleb128 0x19
 1080 00d4 6E       		.uleb128 0x6e
 1081 00d5 0E       		.uleb128 0xe
 1082 00d6 03       		.uleb128 0x3
 1083 00d7 0E       		.uleb128 0xe
 1084 00d8 3A       		.uleb128 0x3a
 1085 00d9 0B       		.uleb128 0xb
 1086 00da 3B       		.uleb128 0x3b
 1087 00db 0B       		.uleb128 0xb
 1088 00dc 00       		.byte	0
 1089 00dd 00       		.byte	0
 1090 00de 00       		.byte	0
 1091              		.section	.debug_aranges,"",%progbits
 1092 0000 3C000000 		.4byte	0x3c
 1093 0004 0200     		.2byte	0x2
 1094 0006 00000000 		.4byte	.Ldebug_info0
 1095 000a 04       		.byte	0x4
 1096 000b 00       		.byte	0
 1097 000c 0000     		.2byte	0
 1098 000e 0000     		.2byte	0
 1099 0010 00000000 		.4byte	.LFB64
 1100 0014 14000000 		.4byte	.LFE64-.LFB64
 1101 0018 00000000 		.4byte	.LFB65
 1102 001c 14000000 		.4byte	.LFE65-.LFB65
 1103 0020 00000000 		.4byte	.LFB66
 1104 0024 00010000 		.4byte	.LFE66-.LFB66
 1105 0028 00000000 		.4byte	.LFB67
 1106 002c 14000000 		.4byte	.LFE67-.LFB67
 1107 0030 00000000 		.4byte	.LFB68
 1108 0034 28000000 		.4byte	.LFE68-.LFB68
 1109 0038 00000000 		.4byte	0
 1110 003c 00000000 		.4byte	0
 1111              		.section	.debug_ranges,"",%progbits
 1112              	.Ldebug_ranges0:
 1113 0000 00000000 		.4byte	.LFB64
 1114 0004 14000000 		.4byte	.LFE64
 1115 0008 00000000 		.4byte	.LFB65
 1116 000c 14000000 		.4byte	.LFE65
 1117 0010 00000000 		.4byte	.LFB66
 1118 0014 00010000 		.4byte	.LFE66
 1119 0018 00000000 		.4byte	.LFB67
 1120 001c 14000000 		.4byte	.LFE67
 1121 0020 00000000 		.4byte	.LFB68
 1122 0024 28000000 		.4byte	.LFE68
 1123 0028 00000000 		.4byte	0
 1124 002c 00000000 		.4byte	0
 1125              		.section	.debug_line,"",%progbits
 1126              	.Ldebug_line0:
 1127 0000 93020000 		.section	.debug_str,"MS",%progbits,1
 1127      0200F801 
 1127      00000201 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 25


 1127      FB0E0D00 
 1127      01010101 
 1128              	.LASF43:
 1129 0000 45455052 		.ascii	"EEPROM_writeByte\000"
 1129      4F4D5F77 
 1129      72697465 
 1129      42797465 
 1129      00
 1130              	.LASF23:
 1131 0011 43757374 		.ascii	"Custom_LED_Blinking\000"
 1131      6F6D5F4C 
 1131      45445F42 
 1131      6C696E6B 
 1131      696E6700 
 1132              	.LASF38:
 1133 0025 55415254 		.ascii	"UART_1_Start\000"
 1133      5F315F53 
 1133      74617274 
 1133      00
 1134              	.LASF4:
 1135 0032 5F5F7569 		.ascii	"__uint8_t\000"
 1135      6E74385F 
 1135      7400
 1136              	.LASF30:
 1137 003c 54696D65 		.ascii	"TimerFlag\000"
 1137      72466C61 
 1137      6700
 1138              	.LASF39:
 1139 0046 5350494D 		.ascii	"SPIM_1_Start\000"
 1139      5F315F53 
 1139      74617274 
 1139      00
 1140              	.LASF5:
 1141 0053 5F5F696E 		.ascii	"__int32_t\000"
 1141      7433325F 
 1141      7400
 1142              	.LASF29:
 1143 005d 636F6E66 		.ascii	"configuration_status\000"
 1143      69677572 
 1143      6174696F 
 1143      6E5F7374 
 1143      61747573 
 1144              	.LASF40:
 1145 0072 5350494D 		.ascii	"SPIM_2_Start\000"
 1145      5F325F53 
 1145      74617274 
 1145      00
 1146              	.LASF31:
 1147 007f 50696E5F 		.ascii	"Pin_ISR_ClearInterrupt\000"
 1147      4953525F 
 1147      436C6561 
 1147      72496E74 
 1147      65727275 
 1148              	.LASF21:
 1149 0096 43757374 		.ascii	"Custom_Pin_Button_Positive\000"
 1149      6F6D5F50 
 1149      696E5F42 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 26


 1149      7574746F 
 1149      6E5F506F 
 1150              	.LASF41:
 1151 00b1 5247424C 		.ascii	"RGBLed_Start\000"
 1151      65645F53 
 1151      74617274 
 1151      00
 1152              	.LASF14:
 1153 00be 666C6F61 		.ascii	"float\000"
 1153      7400
 1154              	.LASF13:
 1155 00c4 75696E74 		.ascii	"uint8\000"
 1155      3800
 1156              	.LASF1:
 1157 00ca 756E7369 		.ascii	"unsigned char\000"
 1157      676E6564 
 1157      20636861 
 1157      7200
 1158              	.LASF47:
 1159 00d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1159      43313120 
 1159      352E342E 
 1159      31203230 
 1159      31363036 
 1160 010b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1160      20726576 
 1160      6973696F 
 1160      6E203233 
 1160      37373135 
 1161 013e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1161      66756E63 
 1161      74696F6E 
 1161      2D736563 
 1161      74696F6E 
 1162              	.LASF42:
 1163 0166 54494D45 		.ascii	"TIMER_button_Start\000"
 1163      525F6275 
 1163      74746F6E 
 1163      5F537461 
 1163      727400
 1164              	.LASF36:
 1165 0179 55415254 		.ascii	"UART_1_Stop\000"
 1165      5F315F53 
 1165      746F7000 
 1166              	.LASF7:
 1167 0185 6C6F6E67 		.ascii	"long unsigned int\000"
 1167      20756E73 
 1167      69676E65 
 1167      6420696E 
 1167      7400
 1168              	.LASF26:
 1169 0197 64617461 		.ascii	"data_water\000"
 1169      5F776174 
 1169      657200
 1170              	.LASF3:
 1171 01a2 73686F72 		.ascii	"short unsigned int\000"
 1171      7420756E 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 27


 1171      7369676E 
 1171      65642069 
 1171      6E7400
 1172              	.LASF24:
 1173 01b5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1173      52784275 
 1173      66666572 
 1173      00
 1174              	.LASF46:
 1175 01c2 50696E5F 		.ascii	"Pin_Led_Blue_Read\000"
 1175      4C65645F 
 1175      426C7565 
 1175      5F526561 
 1175      6400
 1176              	.LASF15:
 1177 01d4 646F7562 		.ascii	"double\000"
 1177      6C6500
 1178              	.LASF32:
 1179 01db 54494D45 		.ascii	"TIMER_button_Stop\000"
 1179      525F6275 
 1179      74746F6E 
 1179      5F53746F 
 1179      7000
 1180              	.LASF2:
 1181 01ed 73686F72 		.ascii	"short int\000"
 1181      7420696E 
 1181      7400
 1182              	.LASF44:
 1183 01f7 54494D45 		.ascii	"TIMER_button_ReadStatusRegister\000"
 1183      525F6275 
 1183      74746F6E 
 1183      5F526561 
 1183      64537461 
 1184              	.LASF10:
 1185 0217 756E7369 		.ascii	"unsigned int\000"
 1185      676E6564 
 1185      20696E74 
 1185      00
 1186              	.LASF37:
 1187 0224 50696E5F 		.ascii	"Pin_Led_Blue_Write\000"
 1187      4C65645F 
 1187      426C7565 
 1187      5F577269 
 1187      746500
 1188              	.LASF9:
 1189 0237 6C6F6E67 		.ascii	"long long unsigned int\000"
 1189      206C6F6E 
 1189      6720756E 
 1189      7369676E 
 1189      65642069 
 1190              	.LASF11:
 1191 024e 75696E74 		.ascii	"uint8_t\000"
 1191      385F7400 
 1192              	.LASF28:
 1193 0256 73797374 		.ascii	"system_status\000"
 1193      656D5F73 
 1193      74617475 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 28


 1193      7300
 1194              	.LASF22:
 1195 0264 43757374 		.ascii	"Custom_Timer_Button\000"
 1195      6F6D5F54 
 1195      696D6572 
 1195      5F427574 
 1195      746F6E00 
 1196              	.LASF12:
 1197 0278 696E7433 		.ascii	"int32_t\000"
 1197      325F7400 
 1198              	.LASF18:
 1199 0280 73697A65 		.ascii	"sizetype\000"
 1199      74797065 
 1199      00
 1200              	.LASF8:
 1201 0289 6C6F6E67 		.ascii	"long long int\000"
 1201      206C6F6E 
 1201      6720696E 
 1201      7400
 1202              	.LASF16:
 1203 0297 63686172 		.ascii	"char\000"
 1203      00
 1204              	.LASF34:
 1205 029c 5350494D 		.ascii	"SPIM_1_Stop\000"
 1205      5F315F53 
 1205      746F7000 
 1206              	.LASF45:
 1207 02a8 54696D65 		.ascii	"Timer_Blinking_ReadStatusRegister\000"
 1207      725F426C 
 1207      696E6B69 
 1207      6E675F52 
 1207      65616453 
 1208              	.LASF33:
 1209 02ca 5247424C 		.ascii	"RGBLed_WriteColor\000"
 1209      65645F57 
 1209      72697465 
 1209      436F6C6F 
 1209      7200
 1210              	.LASF25:
 1211 02dc 5061636B 		.ascii	"PacketReadyFlag\000"
 1211      65745265 
 1211      61647946 
 1211      6C616700 
 1212              	.LASF19:
 1213 02ec 43757374 		.ascii	"Custom_Pin_ISR\000"
 1213      6F6D5F50 
 1213      696E5F49 
 1213      535200
 1214              	.LASF20:
 1215 02fb 43757374 		.ascii	"Custom_Pin_Button\000"
 1215      6F6D5F50 
 1215      696E5F42 
 1215      7574746F 
 1215      6E00
 1216              	.LASF6:
 1217 030d 6C6F6E67 		.ascii	"long int\000"
 1217      20696E74 
ARM GAS  C:\Users\noemi\AppData\Local\Temp\ccZylB8a.s 			page 29


 1217      00
 1218              	.LASF17:
 1219 0316 6C6F6E67 		.ascii	"long double\000"
 1219      20646F75 
 1219      626C6500 
 1220              	.LASF0:
 1221 0322 7369676E 		.ascii	"signed char\000"
 1221      65642063 
 1221      68617200 
 1222              	.LASF49:
 1223 032e 433A5C55 		.ascii	"C:\\Users\\noemi\\Desktop\\university\\university\\"
 1223      73657273 
 1223      5C6E6F65 
 1223      6D695C44 
 1223      65736B74 
 1224 035b 706F6C69 		.ascii	"poli\\lab sensors\\final assignment\\Final-Assignme"
 1224      5C6C6162 
 1224      2073656E 
 1224      736F7273 
 1224      5C66696E 
 1225 038b 6E742D50 		.ascii	"nt-PSoC\\Final_Assignment\\Final_assignment_01.cyds"
 1225      536F435C 
 1225      46696E61 
 1225      6C5F4173 
 1225      7369676E 
 1226 03bc 6E00     		.ascii	"n\000"
 1227              	.LASF27:
 1228 03be 62756666 		.ascii	"bufferUART\000"
 1228      65725541 
 1228      525400
 1229              	.LASF35:
 1230 03c9 5350494D 		.ascii	"SPIM_2_Stop\000"
 1230      5F325F53 
 1230      746F7000 
 1231              	.LASF48:
 1232 03d5 496E7465 		.ascii	"InterruptRoutines.c\000"
 1232      72727570 
 1232      74526F75 
 1232      74696E65 
 1232      732E6300 
 1233              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
